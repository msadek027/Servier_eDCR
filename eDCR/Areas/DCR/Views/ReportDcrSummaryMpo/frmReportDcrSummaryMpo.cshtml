@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<script src="~/AdminLTE/plugins/jQuery/jquery-2.2.3.min.js"></script>
<link href="~/Content/CustomCSS/InputText.css" rel="stylesheet" />
<link href="~/Content/CustomCSS/exportPDF.css" rel="stylesheet" />


<script src="~/Scripts/CustomJS/DefaultValue.js"></script>

<script>
    $(document).ready(function () {
        $.ajaxSetup({
            beforeSend: function () {
                $("#divLoading").show();
            },
            complete: function () {
                $("#divLoading").hide();
            }
        });


        EventPermission();
        LoadRegion();


        function LoadRegion() {
            $.ajax({
                url: '/Default/GetRegion',
                type: 'get',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#RegionCode').append($('<option>', { value: item.RegionCode, html: item.RegionName }, '<option/>'));
                        if (i === 0) {
                            LoadTM(item.RegionCode);
                        }
                        $('#RegionName').val(item.RegionName);
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }
        $('#RegionCode').on('change', function () {
            LoadTM($(this).val());
            $('#RegionName').val($("#RegionCode option:selected").text());
        }).trigger('change');;

        function LoadTM(RegionCode) {
            $.ajax({
                url: '/Default/GetTerritoryFromRegion',
                data: { RegionCode: RegionCode },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#TerritoryManagerID').empty();
                    $.each(data, function (i, item) {

                        if (i == 0) {
                            if (data.length > 1) {
                                $('#TerritoryManagerID').append('<option value="" selected="selected"></option>');
                            }
                            LoadMPO(item.TerritoryManagerID);
                            $('#TerritoryManagerName').val(item.TerritoryManagerName);
                        }
                        $('#TerritoryManagerID').append($('<option>', { value: item.TerritoryManagerID, html: item.TerritoryManagerName }, '<option/>'));

                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }



        $('#TerritoryManagerID').on('change', function () {
            LoadMPO($(this).val());
            $('#TerritoryManagerName').val($("#TerritoryManagerID option:selected").text());
        }).trigger('change');;




        function LoadMPO(TerritoryManagerID) {

            $.ajax({
                url: '/Default/GetMPOPopupList',
                data: { TerritoryManagerID: TerritoryManagerID },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#MPGroup').empty();
                    $.each(data, function (i, item) {
                        if (i == 0) {
                            $('#MPGroup').append('<option value="" selected="selected"></option>');
                            $('#MPOName').val(item.MPOName);
                        }
                        $('#MPGroup').append($('<option>', { value: item.MPGroup, html: item.MPOName }, '<option/>'));

                    });
                },

                error: function () {
                    alert("Failed to load...");
                }
            });

        }
        LoadTM($("#RegionCode").val());
        LoadMPO($("#TerritoryManagerID").val());

        $('#MPGroup').on('change', function () {
            $('#MPOName').val($("#MPGroup option:selected").text());
        }).trigger('change');;

        $("#TerritoryManagerID,#MPGroup").on('change', function (e) {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

        });
        //**************reset function*************************
        $('#btnReset').click(function () {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);
            ResetData();




        });





        $('#FromToDate').daterangepicker(
         {
             locale: {
                 format: 'DD-MM-YYYY'
             },
             startDate: new Date()

         });

        $('#IsActive').click(function () {
            if ($(this).is(':checked')) {
                $(this).siblings('label').html('Unhide');
                $('#divValueParameter').hide();
            }
            else {
                $(this).siblings('label').html('Hide');
                $('#divValueParameter').show();
            }
        });
        $('#btnView').click(function () {
            $("body").addClass('sidebar-collapse').trigger('collapsed.pushMenu');
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            var model = {};

            model.MPGroup = $("#MPGroup").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.RegionCode = $("#RegionCode").val();

            model.DoctorType = $("#DoctorType :selected").val();
            model.FromDate = $("#FromDate").val();
            model.ToDate = $("#ToDate").val();



            //var validTerritoryManagerName = InputValidation('TerritoryManagerName');
            var fromDateParts = model.FromDate.split("-");
            var fromDateObject = new Date(fromDateParts[2], fromDateParts[1] - 1, fromDateParts[0]);

            var toDateParts = model.ToDate.split("-");
            var toDateObject = new Date(toDateParts[2], toDateParts[1] - 1, toDateParts[0]);

            if (fromDateObject > toDateObject) {
                $('#FromDate').css("border", "1px solid red");
                $('#ToDate').css("border", "1px solid red");
                $('#ToDate').val("");
                toastr.info("To Date cannot be greater than From Date");
                return false;
            }
            var Input = InputValidation('FromDate') + InputValidation('ToDate') + InputValidation('RegionCode');

            if (Input==0) {
                $.ajax({
                    type: "POST",
                    url: "/ReportDcrSummaryMpo/GetDataForDCRSummary",
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.length > 0) {

                            $("#MainGrid").data("kendoGrid").dataSource.data(data);
                            $("#MainGrid").removeAttr("style");
                            $('tfoot:visible').hide();
                            $('.k-auto-scrollable').removeAttr("style");
                        }
                        else {
                            AcknowledgeMsg();
                            toastr.warning("No Record Found!");

                        }
                    },

                });
            } else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }


        });




        var MainGrid = $('#MainGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: false,
                schema: {
                    model: {
                        id: "SL",
                        fields: {
                            SL: { type: "string" },
                            Date: { type: "string" },
                            MarketName: { type: "string" },
                            Accompany: { type: "string" },
                            SelectedRegularQty: { type: "string" },
                            SampleRegularQty: { type: "string" },
                            SampleInternQty: { type: "string" },
                            GiftRegularQty: { type: "string" },
                            GiftInternQty: { type: "string" },

                            RegularDOT: { type: "string" },
                            InternDOT: { type: "string" },
                            TotalDOT: { type: "string" },
                            MorningWP: { type: "string" },
                            EveningWP: { type: "string" },

                            TotalDCR: { type: "string" },
                            MorningDCR: { type: "string" },
                            EveningDCR: { type: "string" },
                            InternDCR: { type: "string" },
                            OtherDCR: { type: "string" },
                            MorningAbsent: { type: "string" },
                            EveningAbsent: { type: "string" },
                        
                        }
                    }
                },
                pageSize:100,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 10
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            toolbar: [{ template: "<input type='text' id='txtGridMarketName'  style='float:right' placeholder='Market Name...' class='k-textbox'>" },{ template: "<input type='text' id='txtGridDate'  style='float:right' placeholder='Date...' class='k-textbox'>" }, ],
            height: 400,
            scrollable: true,
            sortable: true,
            filterable: false,
            editable: false,
            selectable: "row",
            navigatable: true,
            columnMenu: false,
            reorderable: false,
            resizable: false,
            //resize: function (e) {
            //    this.table.height(this.element.height() + this.table.height() - 1);
            //},
            columns: [
                { field: "SL", title: "SL" },
                { field: "Date", title: "Date" },
                { field: "MarketName", title: "Market Name" },               
                { field: "Accompany", title:"Accompany" },
                { field: "SelectedRegularQty", title:"Selected<br/>Regular<br/> Qty " },
                { field: "SampleRegularQty", title: "Sample<br/>Regular <br/>Qty" },
                { field: "SampleInternQty", title: "Sample<br/>Intern<br/>Qty" },
                { field: "GiftRegularQty", title: "Gift<br/>Regular <br/>Qty" },
                { field: "GiftInternQty", title: "Gift<br/>Intern<br/>Qty" },

                { field: "RegularDOT", title: "Regular<br/>DOT" },
                { field: "InternDOT", title: "Intern<br/>DOT" },
                { field: "TotalDOT", title: "Total<br/>DOT" },
                { field: "MorningWP", title: "Morning<br/>WP" },
                { field: "EveningWP", title: "Evening<br/>WP" },

                { field: "TotalDCR", title: "Total<br/>DCR" },
                { field: "MorningDCR", title: "Morning<br/>DCR" },
                { field: "EveningDCR", title: "Evening<br/>DCR" },
                { field: "InternDCR", title: "Intern<br/>DCR" },
                { field: "OtherDCR", title: "Other<br/>DCR" },
                { field: "MorningAbsent", title: "Morning<br/>Absent" },
                { field: "EveningAbsent", title: "Evening<br/>Absent" }


            ],
        }).data('kendoGrid');




        $("#txtGridMarketName").keyup(function () {
            var val = $(this).val();
            $("#MainGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [                    
                    { field: "MarketName", operator: "contains", value: val },
                 
                ]
            });
        });
        $("#txtGridDate").keyup(function () {
            var val = $(this).val();
            $("#MainGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [                 
                    { field: "Date", operator: "contains", value: val }
                ]
            });
        });
        $("#MainGrid").on("click", ".btnLink", function (e) {
            var grid = $("#MainGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));

            var model = {};
            model.MPGroup = dataItem.MPGroup;
            model.MPOCode = dataItem.MPOCode;
            model.MPOName = dataItem.MPOName;
            model.SetDate = dataItem.Date;
            model.ItemType = $("#DoctorType").val();

            var Parameter = "MPO: " + model.MPOCode + "," + model.MPOName + ", Date : " + model.SetDate;

            $("#Parameter").html(Parameter);

            DetailPopupWindow.center();
            DetailPopupWindow.open();
            $.ajax({
                type: "POST",
                url: "/ReportDcrSummaryMpo/GetDataForDCRDetail",
                data: JSON.stringify({ model: model }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $('#DetailPopupWindowGrid').data('kendoGrid').dataSource.data(data);
                    }
                    else {
                        DetailPopupWindow.close();
                        AcknowledgeMsg();
                        toastr.warning($("#MessageText").html());
                    }
                },
                error: function () {
                    alert('Error occured!');
                },
            });
        });
        var DetailPopupWindow = $("#DetailPopupWindow").kendoWindow({
            draggable: true,
            modal: true,
            resizable: true,
            title: "LOV."
        }).data("kendoWindow");

        //Initializing Main page details Kendo Grid Colums
        var DetailPopupWindowGrid = $('#DetailPopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "MPGroup",
                        fields: {
                            MPGroup: { type: "string", editable: true },
                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            scrollable: true,
            sortable: true,
            filterable: false,
            editable: false,
            selectable: "row",
            navigatable: true,

            columnMenu: false,
            reorderable: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [
                 { field: "MPGroup", title: "MPGroup" ,hidden:true},
                 { field: "DoctorID", title: "Doctor ID", hidden: true },
                 { field: "DoctorName", title: "Doctor Name" },
                 { field: "ItemType", title: "Item Type" },
                 { field: "ProductCode", title: "Product Code", hidden: true },
                 { field: "ProductName", title: "Product Name" },
                 { field: "Quantity", title: "Quantity" },

            ]

        }).data('kendoGrid');
    });
</script>




<div class="box-header with-border">

    <form class="form" action="/ReportDcrSummaryMpo/Export" id="R1Form" method="post" name="H1Form" target="_blank">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><div id="MessageText"></div></div>
            <div class="col-xs-0 col-sm-0 col-md-10 col-lg-10">
                <div style="text-align:right;">
                    <input type="checkbox" id="IsActive" class="chk" name="IsActive"> <label for="IsActive"> Hide</label>
                    <button id="btnExcel" class="btn btn-primary btn-sm" name="ExportType" value="Excel" type="submit"><i class="glyphicon glyphicon-envelope"></i> Excel </button>
                    <button id="btnPDF" class="btn btn-primary btn-sm" name="ExportType" value="PDF" type="submit"><i class="glyphicon glyphicon-book"></i> PDF </button>
                    <button id="btnView" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-file"></i> View</button>
                </div>
            </div>
        </div>
        <div class="box-body">
            <div class="row" id="divValueParameter">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Date Between:</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <div class="input-group">
                            <input type="text" id="FromDate" name="FromDate" class="firstDay RequiredField form-control ">
                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span> </span>

                            <span class="input-group-btn" style="width:0px;"></span>
                            <input type="text" id="ToDate" name="ToDate" class="date RequiredField form-control ">
                            <span class="input-group-addon"><span class="glyphicon glyphicon-calendar"></span> </span>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3"></div>
                    <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                        @*<select id="DoctorType" name="DoctorType" class="form-control RequiredField">
                            <option value="RegularDoctor">Regular Doctor</option>
                            <option value="InternDoctor">Internee Doctor</option>

                        </select>*@
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Region Name :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="RegionCode" name="RegionCode" class="RequiredField form-control"></select>
                        <input type="hidden" id="RegionName" name="RegionName" class="RequiredField form-control">
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Supervisor :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="TerritoryManagerID" name="TerritoryManagerID" class="RequiredField form-control"></select>
                        <input type="hidden" id="TerritoryManagerName" name="TerritoryManagerName" class="RequiredField form-control">
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">FF Name :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="MPGroup" name="MPGroup" class="RequiredField form-control"></select>
                        <input type="hidden" id="MPOName" name="MPOName" class="RequiredField form-control">
                    </div>
                </div>

            </div>
        </div>
    </form>



    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div id="MainGrid" class="MainGrid"></div>
        </div>
    </div>




    <div class="row">
        <div id="DetailPopupWindow" class="PopupWindowLayout" style="display: none;">
            <div id="Parameter"></div>
            <div id="DetailPopupWindowGrid" class="PopUpGrid"></div>
        </div>
    </div>


    <div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
        <p style="position: absolute; top: 50%; left: 50%; color: White;">
            <img src="~/Content/Images/loading.gif" />
        </p>
    </div>
</div>



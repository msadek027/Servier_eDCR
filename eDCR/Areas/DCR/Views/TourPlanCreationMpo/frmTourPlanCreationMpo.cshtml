@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script src="~/AdminLTE/plugins/jQuery/jquery-2.2.3.min.js"></script>
<link href="~/Content/CustomCSS/InputText.css" rel="stylesheet" />
<link href="~/Content/CustomCSS/exportPDF.css" rel="stylesheet" />
<script src="~/Scripts/CustomJS/DefaultValue.js"></script>



<style>

    .red {
        background-color: red;
    }

    .readonly {
        pointer-events: none;
        background-color: #f2f2f2; /* You can customize the background color or any other styles */
        color: #808080; /* You can customize the text color or any other styles */
    }

    .k-grid tbody tr.k-state-disabled {
        /* Add your styling for read-only rows here */
        color: #888; /* Example: gray text color */
        background-color: #f5f5f5; /* Example: light gray background */
        /* Add any other styles you need */
    }
</style>
<script type="text/javascript">
    var ParameterReportHead = "";

    $(document).ready(function () {


        $.ajaxSetup({
            beforeSend: function () {
                $("#divLoading").show();
            },
            complete: function () {
                $("#divLoading").hide();
            }
        });

        $('#IsActive').click(function () {
            if ($(this).is(':checked')) {
                $(this).siblings('label').html('Unhide');
                $('#divValueParameter').hide();
            }
            else {
                $(this).siblings('label').html('Hide');
                $('#divValueParameter').show();
            }
        });

        $(".datepicker").datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            autoclose: true
        });

        $("#Year").val(yyyy);
        LoadMonth();


        function LoadMonth() {
            $.ajax({
                url: '/Default/GetGenMonth',
                type: 'GET',
                dataType: 'JSON',
                data: "{}",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#MonthNumber').append($('<option>', { value: item.MonthNumber, html: item.MonthName }, '<option/>'));
                    });
                },
                error: function () {
                    alert("Failed to load ... !!");
                }
            });
        }

        LoadRegion();


        function LoadRegion() {
            $.ajax({
                url: '/Default/GetRegion',
                type: 'get',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#RegionCode').append($('<option>', { value: item.RegionCode, html: item.RegionName }, '<option/>'));
                        if (i === 0) {
                            LoadTM(item.RegionCode);
                        }
                        $('#RegionName').val(item.RegionName);
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }
        $('#RegionCode').on('change', function () {
            LoadTM($(this).val());
            $('#RegionName').val($("#RegionCode option:selected").text());
        }).trigger('change');;

        function LoadTM(RegionCode) {
            $.ajax({
                url: '/Default/GetTerritoryFromRegion',
                data: { RegionCode: RegionCode },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#TerritoryManagerID').empty();
                    $.each(data, function (i, item) {

                        if (i === 0) {
                            if (data.length > 1) {
                                $('#TerritoryManagerID').append('<option value="" selected="selected"></option>');
                            }
                            LoadMPO(item.TerritoryManagerID);
                            $('#TerritoryManagerName').val(item.TerritoryManagerName);
                        }
                        $('#TerritoryManagerID').append($('<option>', { value: item.TerritoryManagerID, html: item.TerritoryManagerName }, '<option/>'));

                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }



        $('#TerritoryManagerID').on('change', function () {
            LoadMPO($(this).val());
            $('#TerritoryManagerName').val($("#TerritoryManagerID option:selected").text());
        }).trigger('change');;




        function LoadMPO(TerritoryManagerID) {
            $.ajax({
                url: '/Default/GetMPOPopupList',
                data: { TerritoryManagerID: TerritoryManagerID },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#MPGroup').empty();
                    $.each(data, function (i, item) {
                        if (i == 0) {
                            $('#MPGroup').append('<option value="" selected="selected"></option>');
                            $('#MPOName').val(item.MPOName);
                        }
                        $('#MPGroup').append($('<option>', { value: item.MPGroup, html: item.MPOName }, '<option/>'));

                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });

        }
        LoadTM($("#RegionCode").val());
        LoadMPO($("#TerritoryManagerID").val());

        $('#MPGroup').on('change', function () {
            $('#MPOName').val($("#MPGroup option:selected").text());
        }).trigger('change');;
        $("#TerritoryManagerID,#MPGroup").on('change', function (e) {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);
        });

        var mLocationList = [];
        var eLocationList = [];
        $('#btnView').click(function () {
            $("body").addClass('sidebar-collapse').trigger('collapsed.pushMenu');
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);
            $('#MainGrid').data('kendoGrid').refresh();
            $('#MainGrid').data('kendoGrid').resize();
            $("#ViewReview").val("View");

            var model = {};

            var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('MPGroup');
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();
            model.ViewReview = $("#ViewReview").val();
            ParameterReportHead = "Month: " + $("#MonthNumber option:selected").html() + "-" + $("#Year").val() + ", MPO:" + $("#MPGroup option:selected").html() + ", TM: " + $("#TerritoryManagerID option:selected").html() + ", Region: " + $("#RegionCode option:selected").html();

            if (Input == 0) {
                $("#divLoading").show();
                $.ajax({
                    type: "POST",
                    url: "/TourPlanCreationMpo/GetViewData",
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        mLocationList = data.MorningLocations;
                        eLocationList = data.EveningLocations;

                        //console.log(mLocationList);
                        //console.log(eLocationList);

                        if (data.data.length > 0) {
                            $("#MainGrid").data("kendoGrid").dataSource.data(data.data);

                            $("#MainGrid").data("kendoGrid").lockColumn(0);  // Lock the second column
                            $("#MainGrid").data("kendoGrid").unlockColumn(1); // Unlock the first column
                            $("#MainGrid").data("kendoGrid").unlockColumn(2); // Unlock the first column
                            $("#MainGrid").data("kendoGrid").unlockColumn(3); // Unlock the first column
                            $("#MainGrid").data("kendoGrid").lockColumn(10); // Unlock the first column
                            $("#MainGrid").data("kendoGrid").lockColumn(11); // Unlock the first column
                            $("#MainGrid").data("kendoGrid").lockColumn(12); // Unlock the first column
                            $("#MainGrid").data("kendoGrid").lockColumn(13); // Unlock the first column
                        }
                        else {
                            AcknowledgeMsg();
                            toastr.info($("#MessageText").html());
                        }
                        $("#divLoading").hide();
                    },
                });
            }
            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }
        });
        $('#btnChangeTP').click(function () {

            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            var model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            var Input = InputValidation('MonthNumber') + InputValidation('Year');

            if (Input == 0) {
                ReviewWindow.center();
                ReviewWindow.open();

                $.ajax({
                    type: "POST",
                    url: '/TourPlanMpo/GetPopupReview',
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != "") {
                            $('#ReviewWindowGrid').data('kendoGrid').dataSource.data(data);
                        }
                        else {

                            ReviewWindow.close();
                            AcknowledgeMsg();
                            toastr.info($("#MessageText").html());
                        }

                    },
                    error: function () {
                        alert('Error occured!');
                    },
                    //complete: function () { },
                });
            }
            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }
        });

        $('#btnStatus').click(function () {

            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            $('#PopupWindowGrid').data('kendoGrid').dataSource.filter([]);
            $('#PopupWindowGrid').data('kendoGrid').dataSource.data([]);

            var model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            var Input = InputValidation('MonthNumber') + InputValidation('Year');

            if (Input == 0) {

                PopupWindow.center();
                PopupWindow.open();
                $.ajax({
                    type: "POST",
                    url: '/TourPlanMpo/GetPopupView',
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != "") {
                            $('#PopupWindowGrid').data('kendoGrid').dataSource.data(data);
                        }
                        else {
                            PopupWindow.close();
                            AcknowledgeMsg();
                            toastr.info($("#MessageText").html());
                        }

                    },
                    error: function () {
                        alert('Error occured!');
                    },
                    //complete: function () { },
                });
            }
            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }


        });

        var ReviewWindow = $("#ReviewWindow").kendoWindow({
            //width: "60%",
            //height: "50%",
            draggable: true,
            modal: true,
            resizable: false,
            title: "LOV."
        }).data("kendoWindow");

        //Initializing Main page details Kendo Grid Colums
        var ReviewGrid = $('#ReviewWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "MPOCode",
                        fields: {
                            MasterSL: { type: "string" },
                            MPOCode: { type: "string" },
                            MPOName: { type: "string" },
                            MPGroup: { type: "string" },
                            MonthNumber: { type: "string" },
                            MonthName: { type: "string" },
                            Year: { type: "string" },
                            MasterStatus: { type: "string" },
                            RMasterStatus: { type: "string" },
                            VW: { type: "string" }
                        }
                    }
                },
                pageSize: 20,

            }),
            pageable: {
                pageSizes: true, buttonCount: 5
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            scrollable: true,
            sortable: false,
            filterable: false,
            editable: false,
            selectable: "row",
            //selectable: "multiple",
            toolbar: [{ template: "<input type='text' id='txtReviewPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" },],
            navigatable: true,
            columnMenu: false,
            reorderable: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [
                { field: "MasterSL", hidden: true, title: "Master SL" },
                { field: "MPOCode", title: "MPO Code", hidden: true },
                { field: "MPOName", title: "MPO Name" },
                { field: "MPGroup", title: "MPGroup" },
                { field: "MonthNumber", title: "Month Number", hidden: true },
                { field: "MonthName", title: "Month" },
                { field: "Year", title: "Year" },
                { field: "MasterStatus", title: "Status", hidden: true },
                { field: "RMasterStatus", title: "Status", hidden: true },
                { field: "VW", title: "VW", hidden: true },
            ]

        }).data('kendoGrid');

        $("#ReviewWindowGrid").click(function () {

            var gridData = $("#ReviewWindowGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            var MPGroup = selectedItem.MPGroup;

            $("#MPGroup").val(selectedItem.MPGroup);
            $("#Year").val(selectedItem.Year);
            $("#MonthNumber").val(selectedItem.MonthNumber);
            $("#MasterStatus").html(selectedItem.MasterStatus);
            $("#ViewReview").val("Review");
            var MasterSL = selectedItem.MasterSL;
            var MasterStatus = selectedItem.MasterStatus;
            VW = selectedItem.VW;
            ReviewWindow.close();
            GetDataReview(selectedItem);
            $("#IsActive").click();
        });




        //Initializing Main page details Kendo Grid Colums
        var PopupGrid = $('#PopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "MPOName",
                        fields: {
                            MasterSL: { type: "string" },
                            MPOCode: { type: "string" },
                            MPOName: { type: "string" },
                            MPGroup: { type: "string" },
                            LocCode: { type: "string" },
                            MonthNumber: { type: "string" },
                            MonthName: { type: "string" },
                            Year: { type: "string" },
                            MasterStatus: { type: "string" },

                        }
                    }
                },
                pageSize: 20,
            }),
            toolbar: [{ template: "<input type='text' id='txtPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" },],
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5,
            },
            edit: function (e) {
                $('input[name = "MPOName"]').attr("readonly", true);
            },
            scrollable: true,
            sortable: false,
            editable: false,
            selectable: "row",
            columnMenu: false,
            reorderable: false,
            resizable: true,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [

                { field: "MasterSL", title: "Master SL", hidden: true, },
                { field: "MPOCode", title: "MPO Code", hidden: true },
                { field: "MPOName", title: "MPO Name" },
                { field: "MPGroup", title: "MPGroup" },
                { field: "MonthNumber", title: "Month Number", hidden: true },
                { field: "MonthName", title: "Month" },
                { field: "Year", title: "Year" },
                { field: "MasterStatus", title: "Status", }

            ]

        }).data('kendoGrid');



        $("#PopupWindowGrid").click(function () {

            var gridData = $("#PopupWindowGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row
            var MPGroup = selectedItem.MPGroup;
            $("#MPGroup").val(selectedItem.MPGroup);
            $("#Year").val(selectedItem.Year);
            $("#MonthNumber").val(selectedItem.MonthNumber);
            $("#MasterStatus").html(selectedItem.MasterStatus);
            $("#ViewReview").val("View");
            var MasterSL = selectedItem.MasterSL;
            var MasterStatus = selectedItem.MasterStatus;
            VW = selectedItem.VW;
            PopupWindow.close();
            GetDataView(selectedItem);
            $("#IsActive").click();
        });

        function ReloadData() {
            var model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();
            GetDataView(model);
        }

        function GetDataReview(data) {
            $.ajax({
                type: "POST",
                url: "/TourPlanMpo/GetReviewData",
                data: JSON.stringify({ model: data }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $("#MainGrid").data("kendoGrid").dataSource.data(data);
                        $("#btnExcel").attr("disabled", false);
                        $("#btnPDF").attr("disabled", false);
                    }
                },
            });

        }

        function GetDataView(data) {
            ParameterReportHead = "Month: " + $("#MonthNumber option:selected").html() + "-" + $("#Year").val() + ", MPO:" + $("#MPGroup option:selected").html() + ", TM: " + $('#TerritoryManagerName').val() + ", Region: " + $('#RegionName').val();

            $("#divLoading").show();
            $.ajax({
                type: "POST",
                url: "/TourPlanMpo/GetViewData",
                data: JSON.stringify({ model: data }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $("#MainGrid").data("kendoGrid").dataSource.data(data);
                        $("#btnExcel").attr("disabled", false);
                        $("#btnPDF").attr("disabled", false);
                    }
                    $("#divLoading").hide();
                },

            });

        }


        var gridInput = 0;
        function GridValidation() {
            gridInput = 0;
            var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
            data = dataSource.data(); // Get Detail Grid Data
            if (dataSource.view().length <= 0) {
                gridInput = 1;
            }
        }


        $('#btnCreate').click(function () {

            GridValidation();
            var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('TerritoryManagerName') + InputValidation('MPGroup');

            model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();
            model.ViewReview = $("#ViewReview").val();

            if (Input == 0 && gridInput == 0) {

                var detailDataSource = $('#MainGrid').data("kendoGrid").dataSource;
                var detailData = detailDataSource.data();
                model.DetailList = [];
                if (detailData.length > 0) {
                    for (var i = 0; i < detailData.length; i++) {

                        var detail = {};
                        detail.DayNumber = detailData[i].DayNumber;

                        detail.mShiftType = detailData[i].mShiftType;
                        detail.mLocation = detailData[i].mLocation;
                        detail.mLocationMultiple = detailData[i].mLocationMultiple;
                        detail.mAddress = detailData[i].mAddress;
                        detail.mReportTime = detailData[i].mReportTime;
                        detail.mDailyAllowence = detailData[i].mDailyAllowence;
                        detail.mReview = detailData[i].mReview;

                        detail.eShiftType = detailData[i].eShiftType;
                        detail.eLocation = detailData[i].eLocation;
                        detail.eLocationMultiple = detailData[i].eLocationMultiple;
                        detail.eAddress = detailData[i].eAddress;
                        detail.eReportTime = detailData[i].eReportTime;
                        detail.eDailyAllowence = detailData[i].eDailyAllowence;
                        detail.eReview = detailData[i].eReview;

                        model.DetailList.push(detail);
                        detail = {};
                    }
                }

                $.ajax({
                    url: '/TourPlanCreationMpo/OperationsMode',
                    data: JSON.stringify(model),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        if (data.Status == "Yes") {
                            OperationMsg(data.Mode);
                            toastr.success($("#MessageText").html());
                        }
                        else {
                            ErrorFrmServerMsg(data.Status);
                            toastr.warning($("#MessageText").html());
                        }
                    },
                    error: function () {
                        ErrorFrmClientMsg();
                        toastr.warning($("#MessageText").html());
                    },

                }); //End of ajax call
            }
            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }

        });
        $('#btnApprove').click(function () {

            GridValidation();
            var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('TerritoryManagerName') + InputValidation('MPGroup');

            model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();
            model.ViewReview = $("#ViewReview").val();


            if (Input == 0 && gridInput == 0) {
                //var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
                //var data = dataSource.data();
                $.ajax({
                    url: '/TourPlanMpo/OperationsMode',
                    data: JSON.stringify(model),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        if (data.Status == "Yes") {
                            //$("#CommInvoiceNo").val(data.ID);
                            OperationMsg(data.Mode);
                            toastr.success($("#MessageText").html());
                        }
                        else {
                            ErrorFrmServerMsg(data.Status);
                            toastr.warning($("#MessageText").html());
                        }

                    },
                    error: function () {
                        ErrorFrmClientMsg();
                        toastr.warning($("#MessageText").html());
                    },
                    // complete: function () { CompletedMsg(); },
                }); //End of ajax call

            }

            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }

        });



        $("#MainGrid").kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "DayNumber",
                        fields: {
                            DayNumber: { type: "string" },
                            mShiftType: { type: "string", defaultValue: { value: "Working" } },
                            mLocation: { type: "string", defaultValue: { value: "" } },
                            mLocationMultiple: { type: "string" },
                            mAddress: { type: "string" },
                            mReportTime: { type: "string" },
                            mDailyAllowence: { type: "string", defaultValue: { value: "HQ" } },
                            mReview: { type: "string" },

                            eShiftType: { type: "string", defaultValue: { value: "Working" } },
                            eLocation: { type: "string", defaultValue: { value: "" } },
                            eLocationMultiple: { type: "string" },
                            eAddress: { type: "string" },
                            eReportTime: { type: "string" },
                            eDailyAllowence: { type: "string", defaultValue: { value: "HQ" } },
                            eReview: { type: "string" },
                        }
                    }
                },
                // pageSize: 31,
            }),
            pageable: {
                pageSizes: true, buttonCount: 5
            },

            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
                onDataBoundColor(e);
            },
            toolbar: [{ template: "<input type='text' id='txtReport'  style='float:right' placeholder='Search...' class='k-textbox'>" },],

            scrollable: true,
            sortable: true,
            filterable: false,
            editable: true,
            edit: function (e) {
                $("[name='mShiftType']", e.container).on('change', function (e) {
                    var grid = $("#MainGrid").data("kendoGrid");
                    var row = $(this).closest("tr");

                    var mShiftType = $("[name='mShiftType']", row).val();
                    if (mShiftType == "Leave") {
                        grid.dataItem(row).mDailyAllowence = "NA";
                        grid.dataItem(row).mLocation = "R/L";
                        grid.dataItem(row).mLocationMultiple = "R/L";
                        grid.dataItem(row).mAddress = "Rest Leave";
                        // $('input[name="mAddress"]', row).attr("readonly", true);
                    }
                    else {
                        grid.dataItem(row).mDailyAllowence = "HQ";
                        grid.dataItem(row).mLocation = "--select--";
                        grid.dataItem(row).mLocationMultiple = "";
                        //  grid.dataItem(row).mAddress = "";
                    }
                });
                $("[name='eShiftType']", e.container).on('change', function (e) {
                    var grid = $("#MainGrid").data("kendoGrid");
                    var row = $(this).closest("tr");
                    var eShiftType = $("[name='eShiftType']", row).val();
                    if (eShiftType == "Leave") {
                        grid.dataItem(row).eDailyAllowence = "NA";
                        grid.dataItem(row).eLocation = "R/L";
                        grid.dataItem(row).eLocationMultiple = "R/L";
                        grid.dataItem(row).eAddress = "Rest Leave";
                        //   $('input[name="eAddress"]', row).attr("readonly", true);
                    }
                    else {
                        grid.dataItem(row).eDailyAllowence = "HQ";
                        grid.dataItem(row).eLocation = "--select--";
                        grid.dataItem(row).eLocationMultiple = "";
                        //  grid.dataItem(row).eAddress = "";
                    }
                });
                $("[name='mLocation']", e.container).on('change', function (e) {
                    var grid = $("#MainGrid").data("kendoGrid");
                    var row = $(this).closest("tr");
                    var vLocation = $("[name='mLocation']", row).val();
                    var vLocationMultiple = grid.dataItem(row).mLocationMultiple;

                    if (vLocationMultiple == null || vLocationMultiple == "" || typeof vLocationMultiple == "undefined") {
                        vLocationMultiple = vLocation;
                    } else {
                        vLocationMultiple += " | " + vLocation;
                    }
                    grid.dataItem(row).mLocationMultiple = vLocationMultiple;

                });
                $("[name='eLocation']", e.container).on('change', function (e) {
                    var grid = $("#MainGrid").data("kendoGrid");
                    var row = $(this).closest("tr");
                    var vLocation = $("[name='eLocation']", row).val();
                    var vLocationMultiple = grid.dataItem(row).eLocationMultiple;

                    if (vLocationMultiple == null || vLocationMultiple == "" || typeof vLocationMultiple == "undefined") {
                        vLocationMultiple = vLocation;
                    } else {
                        vLocationMultiple += " | " + vLocation;
                    }
                    grid.dataItem(row).eLocationMultiple = vLocationMultiple;

                });

            },
            save: function (e) {
                e.sender.refresh();
            },
            navigatable: false,
            columnMenu: false,
            reorderable: false,
            resizable: true,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },

            columns: [
                /*               { command: [{ name: "ResetRow", text: "Reset", width: 80, imageClass: "k-icon k-i-close", click: handleReset }], title: "Reset", locked: true, headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 10px;text-align: center;" } },*/
                { field: "DayNumber", title: "Day", locked: true, width: 150 },
                {
                    title: "MORNING", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center;" },
                    columns: [
                        { field: "mShiftType", title: "Shift Type", editor: cmbShiftType, width: 90 },
                        { field: "mDailyAllowence", title: "NDA", editor: cmbNDA, width: 70 },
                        { field: "mLocation", title: "Location", editor: cmbMorningLocation, width: 150, attributes: { style: "font-weight: bold;font-size: 10px;" } },
                        { field: "mLocationMultiple", title: "Location Multiple", width: 200, attributes: { style: "font-family: Tahoma;font-size: 10px;" } },
                        { field: "mAddress", title: "Address", width: 150 },
                        { field: "mReportTime", title: "Report Time", width: 100 },
                        { field: "mReview", title: "Review", width: 50, hidden: true },
                    ]
                },

                {
                    title: "EVENING", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center;" },
                    columns: [
                        { field: "eShiftType", title: "Shift Type", editor: cmbShiftType, width: 90, locked: true, },
                        { field: "eDailyAllowence", title: "NDA", editor: cmbNDA, width: 70 },
                        { field: "eLocation", title: "Location", editor: cmbEveningLocation, width: 150, attributes: { style: "font-weight: bold;font-size: 10px;" } },
                        { field: "eLocationMultiple", title: "Location Multiple", width: 200, attributes: { style: "font-family: Tahoma;font-size: 10px;" } },
                        { field: "eAddress", title: "Address", width: 150 },
                        { field: "eReportTime", title: "Report Time", width: 100 },
                        { field: "eReview", title: "Review", width: 50, hidden: true },
                    ]
                },

            ],
        });

        function handleReset(event) {
            event.preventDefault();
            dataitem = MainGrid.dataItem($(event.currentTarget).closest("tr"));

        };

        function cmbNDA(container, options) {
            try {
                var fieldValue = options.model[options.field] || "HQ";
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "text",
                        dataValueField: "value",
                        optionLabel: "Select",
                        autoBind: false,
                        dataSource: [
                            { text: "HQ", value: "HQ" },
                            { text: "EH", value: "EH" },
                            { text: "NH", value: "NH" },
                            { text: "NA", value: "NA" },
                        ],
                        value: fieldValue,
                    });
            } catch (error) {
                console.error("Error in cmbNDA:", error);
            }
        }
        function cmbShiftType(container, options) {
            try {
                var fieldValue = options.model[options.field] || "Working";
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "text",
                        dataValueField: "value",
                        optionLabel: "Select",
                        autoBind: false,
                        dataSource: [
                            { text: "Working", value: "Working" },
                            { text: "Meeting", value: "Meeting" },
                            { text: "Leave", value: "Leave" },
                        ],
                        value: fieldValue,
                    });
            } catch (error) {
                console.error("Error in cmbShift:", error);
            }
        }


        //function cmbMorningLocation(container, options) {
        //    try {
        //        // Create a div to contain the checkboxes
        //        var checkboxContainer = $('<div />').appendTo(container);
        //        // Append checkboxes to the container
        //        for (var i = 0; i < mLocationList.length; i++) {
        //            $('<input type="checkbox" name="' + options.field + '" value="' + mLocationList[i].LocationCode + '" />' + mLocationList[i].LocationName + '<br/>')
        //                .appendTo(checkboxContainer);
        //        }
        //        // Initialize Kendo MultiSelect
        //        checkboxContainer.kendoMultiSelect({
        //            autoBind: false,
        //            dataSource: mLocationList, // Use the correct variable name
        //            dataTextField: "LocationName",
        //            dataValueField: "LocationCode",
        //            tagMode: "single", // Allow only one item to be selected at a time
        //        });
        //    } catch (error) {
        //        console.error("Error in cmbMorningLocation:", error);
        //    }
        //}

        //function cmbMorningLocation(container, options) {
        //    try {
        //        // Create the multi-select
        //        var multiSelect = $('<select required multiple name="' + options.field + '"/>')
        //            .appendTo(container)
        //            .kendoMultiSelect({
        //                dataTextField: "LocationName",
        //                dataValueField: "LocationCode",
        //                optionLabel: "Select",
        //                autoBind: false,
        //                dataSource: mLocationList,
        //            })
        //            .data("kendoMultiSelect");
        //        // Attach an event listener to the document to close the window when clicking outside
        //        $(document).on("click", function (e) {
        //            var isClickedOutside = !$.contains(container[0], e.target);
        //            if (isClickedOutside) {
        //                // Close the window or perform any other action
        //                multiSelect.close();
        //                // Unbind the click event to avoid unnecessary calls
        //                $(document).off("click");
        //            }
        //        });
        //    } catch (error) {
        //        console.error("Error in cmbMorningLocation:", error);
        //    }
        //}

        function cmbMorningLocation(container, options) {
            try {
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "LocationName",
                        dataValueField: "LocationCode",
                        optionLabel: "Select",
                        autoBind: false,
                        dataSource: mLocationList
                    });
            } catch (error) {
                console.error("Error in cmbMorningLocation:", error);
            }
        }




        function cmbEveningLocation(container, options) {
            try {
                // Define eLocation or replace it with your actual data source
                var eLocation = [
                    { LocationName: "HQ", LocationCode: "HQ" },
                    { LocationName: "EH", LocationCode: "EH" },
                    { LocationName: "NH", LocationCode: "NH" },
                    { LocationName: "NA", LocationCode: "NA" },
                ];
                //  console.log(eLocationList);
                // Create the input element
                $('<input required name="' + options.field + '"/>')
                    .appendTo(container)
                    .kendoDropDownList({
                        dataTextField: "LocationName",
                        dataValueField: "LocationCode",
                        optionLabel: "Select",
                        autoBind: false,
                        dataSource: eLocationList,
                    });
            } catch (error) {
                console.error("Error in cmbEveningLocation:", error);
            }
        }
        function onDataBoundColor(e) {
            var grid = $("#MainGrid").data("kendoGrid");
            var gridData = grid.dataSource.view();
            for (var i = 0; i < gridData.length; i++) {
                var currentUid = gridData[i].uid;
                if (gridData[i].mShiftType == "Leave") {

                    grid.tbody.find("tr[data-uid='" + currentUid + "']").addClass("k-state-disabled");

                    var $row = grid.tbody.find("tr[data-uid='" + currentUid + "']");

                    // Add the "k-state-disabled" class to visually indicate it's disabled
                    $row.addClass("k-state-disabled");

                    // Disable input elements and buttons within the row
                    $row.find("input, button").prop("disabled", true);

                    //var currentRow = grid.table.find("tr[data-uid='" + currentUid + "']");
                    //currentRow.css('background-color', 'DARKCYAN');
                    //$('input[name="mAddress"]', currentRow).prop("disabled", true);
                    //$('input[name="mAddress"]', currentRow).prop("readonly", true);
                    //$('input[name="mAddress"]', currentRow).attr("readonly", true);
                    //$('input[name="mAddress"]', currentRow).attr("disabled", true);


                    var currentRowCol1 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(1)");
                    currentRowCol1.css('background-color', 'DARKCYAN');
                    var currentRowCol2 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(2)");
                    currentRowCol2.css('background-color', 'DARKCYAN');
                    var currentRowCol3 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(3)");
                    currentRowCol3.css('background-color', 'DARKCYAN');
                    var currentRowCol4 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(4)");
                    currentRowCol4.css('background-color', 'DARKCYAN');
                    var currentRowCol5 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(5)");
                    currentRowCol5.css('background-color', 'DARKCYAN');
                    var currentRowCol6 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(6)");
                    currentRowCol6.css('background-color', 'DARKCYAN');

                    //var inputInCol = $('input', currentRowCol);
                    //var defaultValue = "YourDefaultValue";
                    //inputInCol.val(defaultValue);
                    //gridData[i].mAddress = defaultValue;
                    //console.log(gridData[i].mAddress);

                    //$('td:nth-child(4) input', currentRowCol).prop("disabled", true);
                    //$('td:nth-child(4) input', currentRowCol).prop("readonly", true);
                    //$('td:nth-child(4) input', currentRowCol).attr("disabled", true);
                    //$('td:nth-child(4) input', currentRowCol).attr("readonly", true);
                    //currentRowCol.prop('readonly', true);
                    //$('tr[data-uid="' + row.uid + '"] td:nth-child(3)').css("background-color", "red");
                }
                if (gridData[i].eShiftType == "Leave") {
                    //var currentRowCol6 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(6)");
                    //currentRowCol6.css('background-color', 'DARKCYAN');
                    var currentRowCol7 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(7)");
                    currentRowCol7.css('background-color', 'DARKCYAN');
                    var currentRowCol8 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(8)");
                    currentRowCol8.css('background-color', 'DARKCYAN');
                    var currentRowCol9 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(9)");
                    currentRowCol9.css('background-color', 'DARKCYAN');
                    var currentRowCol10 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(10)");
                    currentRowCol10.css('background-color', 'DARKCYAN');
                    var currentRowCol11 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(11)");
                    currentRowCol11.css('background-color', 'DARKCYAN');
                    var currentRowCol12 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(12)");
                    currentRowCol12.css('background-color', 'DARKCYAN');
                    var currentRowCol13 = grid.table.find("tr[data-uid='" + currentUid + "'] td:nth-child(13)");
                    currentRowCol13.css('background-color', 'DARKCYAN');
                }
            }
        }















    });

</script>
<script language="javascript" type="text/javascript">
    function InputValidationPdfExcel() {
        var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('RegionCode') + InputValidation('TerritoryManagerID') + InputValidation('MPGroup');
        if (Input == 0) {
            return true;
        }
        else
            return false;
    }
</script>





<div class="box-header with-border">
    <form class="form" action="/TourPlanMpo/Export" id="R1Form" method="post" name="H1Form" target="_blank">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><div id="MessageText"></div></div>
            <div class="col-xs-0 col-sm-0 col-md-10 col-lg-10">
                <div style="text-align:right;">
                    <button id="btnView" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-file"></i> View</button>
                    <button id="btnStatus" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-check"></i> Status</button>
                    <button id="btnChangeTP" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-retweet"></i> ChangeTP</button>
                    <button id="btnApprove" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-ok"></i> Approve</button>
                    <button id="btnCreate" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-saved"></i> Create</button>
                    <button type="submit" id="btnExcel" name="ExportType" value="Excel" class="btn btn-primary btn-sm" onclick="return InputValidationPdfExcel();" formaction="/TourPlanMpo/Export" data-toggle="tooltip" data-placement="right" title="[Mandatory: Month, Year, Region,TM,MPO]"><i class="glyphicon glyphicon-envelope"></i> Excel </button>
                    <button type="submit" id="btnPDF" name="ExportType" value="PDF" class="btn btn-primary btn-sm" onclick="return InputValidationPdfExcel();" formaction="/TourPlanMpo/Export" data-toggle="tooltip" data-placement="right" title="[Mandatory: Month, Year, Region,TM,MPO]"><i class="glyphicon glyphicon-book"></i> Pdf </button>

                </div>
            </div>
        </div>



        <div class="box-body">
            <div class="row" id="divValueParameter">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Month - Year  :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <div class="input-group">
                            <select id="MonthNumber" name="MonthNumber" class=" RequiredField form-control"></select>
                            <span class="input-group-btn" style="width:2px;"></span>
                            <input type="text" id="Year" name="Year" class="datepicker RequiredField form-control" />
                        </div>
                        <input type="hidden" id="ViewReview" name="ViewReview" class="form-control RequiredField" readonly="readonly">
                    </div>
                    <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                        <span style="background-color:lightskyblue;display:none" id="MasterStatus"></span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Region Name :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="RegionCode" name="RegionCode" class="RequiredField form-control"></select>
                        <input type="hidden" id="RegionName" name="RegionName" class="RequiredField form-control">
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Supervisor :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="TerritoryManagerID" name="TerritoryManagerID" class="RequiredField form-control"></select>
                        <input type="hidden" id="TerritoryManagerName" name="TerritoryManagerName" class="RequiredField form-control">
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">FF Name :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="MPGroup" name="MPGroup" class="RequiredField form-control"></select>
                        <input type="hidden" id="MPOName" name="MPOName" class="RequiredField form-control">
                    </div>
                </div>

            </div>
        </div>
    </form>
    <div class="row">
        <div id="MainGrid" class="MainGrid"></div>
    </div>

</div>





<div class="row">
    <div id="PopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="PopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>


<div class="row">
    <div id="ReviewWindow" class="ReviewWindowLayout" style="display: none;">
        <div id="ReviewWindowGrid" class="PopUpGrid"></div>
    </div>
</div>


<div class="row">
    <div id="TerritoryPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="TerritoryPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>



<div class="row">
    <div id="MPOPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="MPOPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>






<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;  opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 50%; color: White;">
        <img src="~/Content/Images/loading.gif" />
    </p>
</div>

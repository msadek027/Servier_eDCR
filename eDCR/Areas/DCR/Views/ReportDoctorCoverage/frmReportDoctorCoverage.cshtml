@{
    Layout = "~/Views/Shared/_Layout.cshtml";
} 
<script src="~/AdminLTE/plugins/jQuery/jquery-2.2.3.min.js"></script>
<link href="~/Content/CustomCSS/InputText.css" rel="stylesheet" />
<link href="~/Content/CustomCSS/exportPDF.css" rel="stylesheet" />
<script src="~/Scripts/CustomJS/DefaultValue.js"></script>

<script type="text/javascript">
    //// Start  $(document).ready(function ()
    $(document).ready(function () {

        $.ajaxSetup({
            beforeSend: function () {
                $("#divLoading").show();
            },
            complete: function () {
                $("#divLoading").hide();
            }
        });
        EventPermission();
        LoadMonth(); 
        $(".datepicker").datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            autoclose: true
        });
        $("#Year").val(yyyy);   
        function LoadMonth() {
            $.ajax({
                url: '/Default/GetGenMonth',
                type: 'GET',
                dataType: 'JSON',
                data: "{}",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#MonthNumber').append($('<option>', { value: item.MonthNumber, html: item.MonthName }, '<option/>'));
                    });
                },
                error: function () {
                    alert("Failed to load !!");
                }
            });
        }
        LoadRegion();
        function LoadRegion() {
            $.ajax({
                url: '/Default/GetRegion',
                type: 'get',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {                       
                        if (i == 0) {
                            if (data.length > 1) {
                                $('#RegionCode').append('<option value="" selected="selected"></option>');
                            }
                            LoadTM(item.RegionCode);
                            $('#RegionName').val(item.RegionName);
                        }
                        $('#RegionCode').append($('<option>', { value: item.RegionCode, html: item.RegionName }, '<option/>'));
                  
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }
        $('#RegionCode').on('change', function () {
            LoadTM($(this).val());
            $('#RegionName').val($("#RegionCode option:selected").text());
        }).trigger('change');;

        function LoadTM(RegionCode) {
            $.ajax({
                url: '/Default/GetTerritoryFromRegion',
                data: { RegionCode: RegionCode },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#TerritoryManagerID').empty();
                    $.each(data, function (i, item) {
                        if (i === 0) {
                            if (data.length > 1) {
                                $('#TerritoryManagerID').append('<option value="" selected="selected"></option>');
                            }
                            LoadMPO(item.TerritoryManagerID);
                            $('#TerritoryManagerName').val(item.TerritoryManagerName);
                        }
                        $('#TerritoryManagerID').append($('<option>', { value: item.TerritoryManagerID, html: item.TerritoryManagerName }, '<option/>'));
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }



        $('#TerritoryManagerID').on('change', function () {
            LoadMPO($(this).val());
            $('#TerritoryManagerName').val($("#TerritoryManagerID option:selected").text());
        }).trigger('change');;




        function LoadMPO(TerritoryManagerID) {

            $.ajax({
                url: '/Default/GetMPOPopupList',
                data: { TerritoryManagerID: TerritoryManagerID },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#MPGroup').empty();
                    $.each(data, function (i, item) {
                        if (i == 0) {
                            $('#MPGroup').append('<option value="" selected="selected"></option>');
                            $('#MPOName').val(item.MPOName);
                        }
                        $('#MPGroup').append($('<option>', { value: item.MPGroup, html: item.MPOName }, '<option/>'));

                    });
                },

                error: function () {
                    alert("Failed to load...");
                }
            });

        }
        LoadTM($("#RegionCode").val());
        LoadMPO($("#TerritoryManagerID").val());

        $('#MPGroup').on('change', function () {
            $('#MPOName').val($("#MPGroup option:selected").text());
        }).trigger('change');
        $("#TerritoryManagerID,#MPGroup").on('change', function (e) {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

        });
        $('#btnReset').click(function () {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);
            ResetData();
            $("#Year").val(yyyy);


        });


        $('#IsActive').click(function () {
            if ($(this).is(':checked')) {
                $(this).siblings('label').html('Unhide');
                $('#divValueParameter').hide();
            }
            else {
                $(this).siblings('label').html('Hide');
                $('#divValueParameter').show();
            }
        });


        $('#btnView').click(function () {
            $("body").addClass('sidebar-collapse').trigger('collapsed.pushMenu');
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            var model = {};

            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();
            model.RegionCode = $("#RegionCode").val();

       

            var Input = InputValidation('MonthNumber') + InputValidation('Year') ;
            if (Input == 0) {
                $.ajax({
                    type: "POST",
                    url: "/ReportDoctorCoverage/GetDoctorCoverage",
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.length > 0) {
                            $("#MainGrid").data("kendoGrid").dataSource.data(data);
                        }
                        else {
                            AcknowledgeMsg();
                            toastr.info($("#MessageText").html());

                        }
                    },

                });
            }

            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }


        });

        //Initializing Main page details Kendo Grid Colums
        var MainGrid = $('#MainGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: false,
                schema: {
                    model: {
                        id: "MarketName",
                        fields: {
                            MarketName: { type: "string" },
                            MPOID: { type: "string" },
                            MPOName: { type: "string" },
                            TotalNoOfDoctor: { type: "string" },
                            TotalNoOfDOTPlanDoctor: { type: "string" },
                            DoctorPlannedPer: { type: "string" },
                            DoctorCoveragePer: { type: "string" },
                            TotalNoOfDOTPlan: { type: "string" },
                            TotalExecutionOfDOTPlan: { type: "string" },

                            TotalExecutionOfDOTDoctorWithoutDOTPlan: { type: "string" },
                            PlanVsExecutionPer: { type: "string" },
                            TotalExecutionOfNonDOTDoctor: { type: "string" },
                            TotalNoOfNonDOTDoctorVisited: { type: "string" },
                            TotalExecutionOfNewDoctor: { type: "string" },
                            TotalNoOfNewDoctorVisited: { type: "string" },
                            TotalExecutionOfInternDoctor: { type: "string" },
                     
                        }
                    }
                },
                pageSize: 100,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount:10
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            toolbar: [{ template: "<input type='text' id='txtInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            //excel: {
            //    fileName: "DoctorCoverage.xlsx",
            //    allPages: true,
            //    filterable: true
            //},
            //pdf: {
            //    fileName: "DoctorCoverage.pdf",
            //    paperSize: "A4",
            //    allPages: true,
            //    avoidLinks: true,
            //    margin: { top: "2.1cm", right: "1cm", bottom: "1cm", left: "1cm" },
            //    landscape: true,
            //    repeatHeaders: true,
            //    template: $("#page-template").html(),
            //    scale: 0.7
            //},
           
            selectable: "row",
            height: 450,
            scrollable: true,
            sortable: true,
            filterable: false,
            editable: false,
            navigatable: false,
            columnMenu: false,
            reorderable: false,
            //resizable: true,
            //resize: function (e) {
            //    this.table.height(this.element.height() + this.table.height() - 1);
            //},
            columns: [
                 { field: "MarketName", title: "Market Name", locked: true },
                 { field: "MPOID", title: "FF <br/> ID", locked: true },
                 { field: "MPOName", title: "FF Name", locked: true },
                 { field: "TotalNoOfDoctor", title: "Total<br/>No. of<br/> Doctor" },
                 { field: "TotalNoOfDOTPlanDoctor", title: "Total <br/>No. of <br/>DOT Plan<br/> Doctor" },
                 { field: "DoctorPlannedPer", title: "Doctor<br/>Planned <br/>(%)" },
                 { field: "TotalNoOfVisitedDoctor", title: "Total<br/>No. of<br/>Visited<br/>Doctor" },
                 { field: "DoctorCoveragePer", title: "Doctor<br/>Coverage <br/> (%)" },
                 { field: "TotalNoOfDOTPlan", title: "Total<br/>No of<br/>DOT Plan" },
                 { field: "TotalExecutionOfDOTPlan", title: "Total <br/> Execution<br/>of DOT Plan" },

                { field: "TotalExecutionOfDOTDoctorWithoutDOTPlan", title: "Total <br/>Execution of<br/> DOT Doctor <br/>Without <br/>DOT Plan" },
                { field: "PlanVsExecutionPer", title: "Plan<br/>Vs.<br/>Execution<br/> (%)" },

                { field: "TotalExecutionOfNonDOTDoctor", title: "Total  <br/>Execution of<br/>Non-DOT <br/> Doctor" },
                { field: "TotalNoOfNonDOTDoctorVisited", title: "Total  <br/>No. of<br/>Non-DOT <br/> Doctor <br/>Visited" },

                { field: "TotalExecutionOfNewDoctor", title: "Total<br/>Execution<br/>of New<br/>Doctor" },       
                { field: "TotalNoOfNewDoctorVisited", title: "Total <br/>No. of<br/> New <br/>Doctor <br/>Visited" },
                { field: "TotalExecutionOfInternDoctor", title: "Total<br/>Execution<br/>of Intern<br/>Doctor " },

            ]
        }).data('kendoGrid');





        $("#txtInput").keyup(function () {
            var val = $(this).val();
            $("#MainGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                     { field: "MPOCode", operator: "contains", value: val },
                     { field: "MPOName", operator: "contains", value: val },
                     { field: "TerritoryManagerID", operator: "contains", value: val },
                     { field: "TerritoryManagerName", operator: "contains", value: val },
                     { field: "MPGroup", operator: "contains", value: val },


                ]
            });
        });


    });





</script>


<div class="box-header with-border">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

            <form class="form" action="/ReportDoctorCoverage/Export" id="R1Form" method="post" name="H1Form" target="_blank">
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><div id="MessageText"></div></div>
                    <div class="col-xs-0 col-sm-0 col-md-10 col-lg-10">
                        <div style="text-align:right;">
                            <input type="checkbox" id="IsActive" class="chk" name="IsActive"> <label for="IsActive"> Hide</label>
                            <button id="btnExcel" class="btn btn-primary btn-sm" name="ExportType" value="Excel" type="submit"><i class="glyphicon glyphicon-envelope"></i> Excel </button>
                            <button id="btnPDF" class="btn btn-primary btn-sm" name="ExportType" value="PDF" type="submit"><i class="glyphicon glyphicon-book"></i> PDF </button>
                            <button id="btnView" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-file"></i> View</button>
                        </div>
                    </div>
                </div>

                <div class="box-body">

                    <div class="row" id="divValueParameter">
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3"> Month - Year :</div>
                            <div class="col-xs-0 col-sm-0 col-md-6 col-lg-6">
                                <div class="input-group">
                                    <select id="MonthNumber" name="MonthNumber" class=" RequiredField form-control"></select>
                                    <span class="input-group-btn" style="width:0px;"></span>
                                    <input type="text" id="Year" name="Year" class="datepicker RequiredField form-control" />
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">Region Name :</div>
                            <div class="col-xs-0 col-sm-0 col-md-6 col-lg-6">
                                <select id="RegionCode" name="RegionCode" class="RequiredField form-control"></select>
                                <input type="hidden" id="RegionName" name="RegionName" class="RequiredField form-control">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">Supervisor :</div>
                            <div class="col-xs-0 col-sm-0 col-md-6 col-lg-6">
                                <select id="TerritoryManagerID" name="TerritoryManagerID" class="RequiredField form-control"></select>
                                <input type="hidden" id="TerritoryManagerName" name="TerritoryManagerName" class="RequiredField form-control">
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3">FF Name :</div>
                            <div class="col-xs-0 col-sm-0 col-md-6 col-lg-6">
                                <select id="MPGroup" name="MPGroup" class="RequiredField form-control"></select>
                                <input type="hidden" id="MPOName" name="MPOName" class="RequiredField form-control">
                            </div>
                        </div>

                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
                <div class="row">
                    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                        <div id="MainGrid" class="MainGrid"></div>

                    </div>
                </div>

            <div class="row">
                <div id="TerritoryPopupWindow" class="PopupWindowLayout" style="display: none;">
                    <div id="TerritoryPopupWindowGrid" class="PopUpGrid"></div>
                </div>
            </div>
            <div class="row">
                <div id="MarketPopupWindow" class="PopupWindowLayout" style="display: none;">
                    <div id="MarketPopupWindowGrid" class="PopUpGrid"></div>
                </div>
            </div>
            <div class="row">
                <div id="MPOPopupWindow" class="PopupWindowLayout" style="display: none;">
                    <div id="MPOPopupWindowGrid" class="PopUpGrid"></div>
                </div>
            </div>

            <div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
                <p style="position: absolute; top: 50%; left: 50%; color: White;">
                    <img src="~/Content/Images/loading.gif" />
                </p>
            </div>
    






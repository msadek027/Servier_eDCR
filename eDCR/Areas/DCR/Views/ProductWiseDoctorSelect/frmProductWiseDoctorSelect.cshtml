@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<script src="~/AdminLTE/plugins/jQuery/jquery-2.2.3.min.js"></script>
<link href="~/Content/CustomCSS/InputText.css" rel="stylesheet" />
<link href="~/Content/CustomCSS/exportPDF.css" rel="stylesheet" />
<script src="~/Scripts/CustomJS/DefaultValue.js"></script>

<script type="text/javascript">
    $(document).ready(function () {

        var DetailNo = "";
        var MPOCode = "";
        $.ajaxSetup({
            beforeSend: function () {
                $("#divLoading").show();
            },
            complete: function () {
                $("#divLoading").hide();
            }
        });


        $(".datepicker").datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            autoclose: true
        });

        EventPermission();



        $("#Year").val(yyyy);
        LoadMonth();


        function LoadMonth() {
            $.ajax({
                url: '/Default/GetGenMonth',
                type: 'GET',
                dataType: 'JSON',
                data: "{}",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#MonthNumber').append($('<option>', { value: item.MonthNumber, html: item.MonthName }, '<option/>'));
                    });
                },
                error: function () {
                    alert("Failed to load ... !!");
                }
            });
        }
        LoadRegion();


        function LoadRegion() {
            $.ajax({
                url: '/Default/GetRegion',
                type: 'get',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#RegionCode').append($('<option>', { value: item.RegionCode, html: item.RegionName }, '<option/>'));
                        if (i === 0) {
                            LoadTM(item.RegionCode);
                        }
                        $('#RegionName').val(item.RegionName);
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }
        $('#RegionCode').on('change', function () {
            LoadTM($(this).val());
            $('#RegionName').val($("#RegionCode option:selected").text());
        }).trigger('change');;

        function LoadTM(RegionCode) {
            $.ajax({
                url: '/Default/GetTerritoryFromRegion',
                data: { RegionCode: RegionCode },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#TerritoryManagerID').empty();
                    $.each(data, function (i, item) {

                        if (i === 0) {
                            if (data.length > 1) {
                                $('#TerritoryManagerID').append('<option value="" selected="selected"></option>');
                            }
                            LoadMPO(item.TerritoryManagerID);
                            $('#TerritoryManagerName').val(item.TerritoryManagerName);
                        }
                        $('#TerritoryManagerID').append($('<option>', { value: item.TerritoryManagerID, html: item.TerritoryManagerName }, '<option/>'));

                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }



        $('#TerritoryManagerID').on('change', function () {
            LoadMPO($(this).val());
            $('#TerritoryManagerName').val($("#TerritoryManagerID option:selected").text());
        }).trigger('change');;




        function LoadMPO(TerritoryManagerID) {

            $.ajax({
                url: '/Default/GetMPOPopupList',
                data: { TerritoryManagerID: TerritoryManagerID },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#MPGroup').empty();
                    $.each(data, function (i, item) {
                        if (i == 0) {
                            $('#MPGroup').append('<option value="" selected="selected"></option>');
                            $('#MPOName').val(item.MPOName);
                        }
                        $('#MPGroup').append($('<option>', { value: item.MPGroup, html: item.MPOName }, '<option/>'));

                    });
                },

                error: function () {
                    alert("Failed to load...");
                }
            });

        }
        LoadTM($("#RegionCode").val());
        LoadMPO($("#TerritoryManagerID").val());

        $('#MPGroup').on('change', function () {
            $('#MPOName').val($("#MPGroup option:selected").text());
        }).trigger('change');;
        $("#TerritoryManagerID,#MPGroup").on('change', function (e) {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

        });


        $('#IsActive').click(function () {
            if ($(this).is(':checked')) {
                $(this).siblings('label').html('Unhide');
                $('#divValueParameter').hide();
            }
            else {
                $(this).siblings('label').html('Hide');
                $('#divValueParameter').show();
            }
        });





        $('#btnView').click(function () {

            $("body").addClass('sidebar-collapse').trigger('collapsed.pushMenu');

            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            var model = {};
            var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('MPGroup');

            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();

            if (Input == 0) {
                $.ajax({
                    type: "POST",
                    url: "/ProductWiseDoctorSelect/GetDetailDataForSaveUpdate",
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.length > 0) {
                            $("#MainGrid").data("kendoGrid").dataSource.data(data);
                        }
                        $("#divLoading").hide();
                    },
                });
            }
            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }
        });

        $('#btnStatus').click(function () {

            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);


            var model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            var Input = InputValidation('MonthNumber') + InputValidation('Year');
            if (Input == 0) {

                PopupWindow.center();
                PopupWindow.open();

                $.ajax({
                    type: "POST",
                    url: '/ProductWiseDoctorSelect/GetPopupView',
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data != "") {
                            $('#PopupWindowGrid').data('kendoGrid').dataSource.data(data);
                        }
                        else {
                            PopupWindow.close();
                            AcknowledgeMsg();
                            toastr.warning($("#MessageText").html());
                        }

                    },
                    error: function () {
                        alert('Error occured!');
                    },
                    //complete: function () { },
                });
            }
            else {
                ValidationMsg();
                toastr.info($("#MessageText").html());
            }
        });


        //Initializing Main page details Kendo Grid Colums
        var PopupGrid = $('#PopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "MPOCode",
                        fields: {
                            MasterSL: { type: "string" },
                            MPOCode: { type: "string" },
                            MPOName: { type: "string" },                           
                            MPGroup: { type: "string" },                         
                            MonthNumber: { type: "string" },
                            MonthName: { type: "string" },
                            Year: { type: "string" },
                            MasterStatus: { type: "string" }
                        }
                    }
                },
                 pageSize: 20,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            scrollable: true,
            sortable: false,
            filterable: false,
            editable: false,
            selectable: "row",
            //selectable: "multiple",
            toolbar: [{ template: "<input type='text' id='txtPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            navigatable: true,
            columnMenu: false,
            reorderable: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [
                 { field: "MasterSL", hidden: true, title: "MasterSL" },
                 { field: "MPOCode", title: "MPO Code", hidden: true },
                 { field: "MPOName", title: "MPO Name" },
                 { field: "MPGroup", title: "MPGroup" },
                  { field: "MonthNumber", title: "Month Number", hidden: true, },
                 { field: "MonthName", title: "Month" },
                 { field: "Year", title: "Year" },
                 { field: "MasterStatus", title: "Status" }
            ]

        }).data('kendoGrid');


        $("#txtPopupInput").keyup(function () {
            var val = $(this).val();
            $("#PopupWindowGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                    { field: "MonthNumber", operator: "contains", value: val },
                    { field: "MarketName", operator: "contains", value: val },
                    { field: "MonthName", operator: "contains", value: val },
                    { field: "Year", title: "contains", value: val },
                    { field: "MPOCode", title: "contains", value: val },
                    { field: "MPOName", title: "contains", value: val }
                ]
            });
        });
        $("#PopupWindowGrid").click(function () {

            var gridData = $("#PopupWindowGrid").data("kendoGrid");
            var selectedItem = (gridData.dataItem(gridData.select())); //Selected Row

            var MPGroup = selectedItem.MPGroup;


            $("#MPGroup").val(selectedItem.MPGroup);
            $("#Year").val(selectedItem.Year);
            $("#MonthNumber").val(selectedItem.MonthNumber);
            $("#MasterStatus").val(selectedItem.MasterStatus);  


            var MasterStatus = selectedItem.MasterStatus;

            var model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();


            GetDetailDataForSaveUpdate(model);
            PopupWindow.close();
        });








        //Initializing Main page details Kendo Grid Colums
        var MainGrid = $('#MainGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "ProductCode",
                        fields: {
                            ProductName: { type: "string", defaultValue: "Press any key" },
                            DoctorName: { type: "string", defaultValue: "Press any key" },
                            TotalQty: { type: "string" },
                            DoctorId: { type: "string" },
                            DoctorName: { type: "string" },
                            Specialization: { type: "string" },
                       
                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            toolbar: [{ text: "Add Items", className: "btnDetail", style: "float:left", imageClass: "k-icon k-add", attributes: { "class": "k-grid-toolbar k-button" } }, { name: "excel", text: "Export to Excel" }, ],
            excel: {
                fileName: "PWDS.xlsx",
                allPages: true,
                filterable: true
            },
            edit: function (e) {
                $("[name='ProductName']", e.container).on('keyup keypress keydown  click', function (e) {
                    PopUpProductList();

                });

                $("[name='DoctorName']", e.container).on('keyup keypress keydown  click', function (e) {

                    PopUpDoctorList();

                });



                $('input[name = "ProductName"]').attr("readonly", true);
                $('input[name = "DoctorName"]').attr("readonly", true);
                $('input[name = "TotalQty"]').attr("readonly", true);

            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },


            scrollable: true,
            sortable: true,
            filterable: false,
            editable: true,
            selectable: "row",
            navigatable: true,

            columnMenu: false,
            reorderable: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [

                  { field: "ProductName", title: "Product Name" },
                  { field: "ProductCode", title: "Product Code", hidden: true },
                  { field: "TotalQty", title: "Total Qty" },
                  { field: "DoctorName", title: "Doctor Name" },
                  { field: "Specialization", title: "Specialization" },
                  { field: "DoctorId", title: "Doctor ID", hidden: false, },

            { command: [{ name: "DeletedRow", text: "Delete", imageClass: "k-icon k-i-close", click: handleSubDetailDelete }], title: "Delete", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center;" } }
            ]

        }).data('kendoGrid');




        $(".btnDetail").click(function (e) {
            e.preventDefault();
            var Input = InputValidation('MPGroup');
            if (Input == 0)
            {
                if ($("#MasterStatus").val() == "Waiting") {
                    AddRowToDetailGrid();
                }
                else {
                    ValidationMsg();
                    toastr.warning("No items can be added after approval");
                }
            }
            else {
                ValidationMsg();              
                toastr.info($("#MessageText").html());      
            }

        });


        function AddRowToDetailGrid() {

            var addflag = 1; // For Row Add in Detail Grid using enter Key Press
            var grid = $("#MainGrid").data("kendoGrid");
            $("#MainGrid").data().kendoGrid.bind('dataBound', function () {
                this.element.find('tbody tr:first').addClass('k-state-selected');
                //e.container.find("td:eq(2) input").focus();
            });
            var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
            var data = dataSource.data()
            var addData = dataSource.data();
            if (addData != null) { // For Add row when Exiting Data in Grid

                for (var i = 0; i < addData.length; i++) {

                    if (addData[i].val == "") {
                        addflag = 0;
                    }
                    if (addData[i].ProductCode == "" || addData[i].ProductName == null || addData[i].ProductName == "" || addData[i].ProductName == "Press any key" || addData[i].DoctorId == "" || addData[i].DoctorName == null || addData[i].DoctorName == "" || addData[i].DoctorId == "Press any key") {
                        addflag = 0;
                    }
                }
            }
            if (addflag == 1) {
                grid.addRow();
            }
            //var cell = $('#MainGrid').find('tbody tr:eq(0) td:eq(0)').focus(); // or different cell
            //$('#MainGrid').data('kendoGrid').editCell(cell);
        }





        function handleSubDetailDelete(event) {
            event.preventDefault();
            dataitem = MainGrid.dataItem($(event.currentTarget).closest("tr"));
            RemoveConfirmationDetail.open();
        };

        var RemoveConfirmationDetail = $('#RemoveConfirmationDetailWindow').kendoWindow({
            width: "400px",
            height: "100px",
            draggable: false,
            modal: true,
            title: "Do You Want To Remove This Record?"
        }).data("kendoWindow").center();


        ////Handling Yes button click for master Delete Confirmation[Yes Button]
        $('#btnRemoveConfirmationDetailYes').click(function () {
            MainGrid.dataSource.remove(dataitem);
            RemoveConfirmationDetail.close();
            OperationMsg();
        });

        //Handling No button click for grid row Delete Confirmation[No Button]
        $('#btnRemoveConfirmationDetailNo').click(function () {
            dataitem = {};
            RemoveConfirmationDetail.close();
        });


        /****************************PopUpGrid for Institution*****************************/

        //Function For Batch List Information Window
        var ProductPopupWindow = $("#ProductPopupWindow").kendoWindow({
            width: "60%",
            //height: "50%",
            draggable: true,
            //iframe: true,
            modal: true,
            resizable: false,
            title: "LOV."
        }).data("kendoWindow");





        //Initializing Main page details Kendo Grid Colums
        var ProductPopupWindowGrid = $('#ProductPopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "ProductCode",
                        fields: {
                            ProductCode: { type: "string" },
                            ProductName: { type: "string" },
                            TotalQty: { type: "string" },
                        }
                    }
                },
                pageSize: 5,
            }),
            pageable: {
                pageSizes: true, buttonCount: 5
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            scrollable: false,
            sortable: false,
            filterable: false,
            editable: false,
            selectable: "row",
            toolbar: [{ template: "<input type='text' id='txtProductPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],

            columnMenu: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [
                 { field: "ProductCode", title: "Product Code" },
                 { field: "ProductName", title: "Product Name" },
                 { field: "TotalQty", title: "Total Qty" },

            ]

        }).data('kendoGrid');



        //Produc Name twise Filter table row
        $("#txtProductPopupInput").keyup(function () {
            var val = $(this).val();
            $("#ProductPopupWindowGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                     { field: "ProductCode", operator: "contains", value: val },
                     { field: "ProductName", operator: "contains", value: val },
                ]
            });
        });


        function PopUpProductList() {

            ProductPopupWindow.center();
            ProductPopupWindow.open();

            var MPGroup = $("#MPGroup").val();

            $.ajax({
                type: "POST",
                url: "/ProductWiseDoctorSelect/ProductList",
                data: JSON.stringify({ MPGroup: MPGroup }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $("#ProductPopupWindowGrid").data("kendoGrid").dataSource.data(data);
                    }

                    else {

                        ProductPopupWindow.close();
                        AcknowledgeMsg();
                        toastr.info($("#MessageText").html());
                    }
                }

            });

        }


        $('#ProductPopupWindowGrid').click(function () {
            var isTrue = 1;
            var grid = $(this).data('kendoGrid');
            var selectedItem = grid.dataItem(grid.select());
            ProductCode = selectedItem.ProductCode;
            var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
            data = dataSource.data(); // Get Detail Grid Data
            if (dataSource.hasChanges) {
                for (var i = data.length - 1; i >= 0; i--) {
                    if (data[i].ProductCode == data[i].ProductCode) {
                        isTrue = 1;
                        //WarningMsg();
                        //toastr.warning($("#MessageText").html());
                    }

                }
            }
            if (isTrue == 1) {
                var gridCiItem = $("#MainGrid").data("kendoGrid");
                var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                selectedCiigItem.set("ProductCode", selectedItem.ProductCode);
                selectedCiigItem.set("ProductName", selectedItem.ProductName);
                selectedCiigItem.set("TotalQty", selectedItem.TotalQty);

            }

            var cell = $('#MainGrid').find('tbody tr:eq(0) td:eq(2)').focus(); // or different cell
            $('#MainGrid').data('kendoGrid').editCell(cell);

            ProductPopupWindow.close();
        });




        /****************************PopUpGrid for Doctor*****************************/

        //Function For Batch List Information Window
        var DoctorPopupWindow = $("#DoctorPopupWindow").kendoWindow({
            width: "60%",
            //height: "50%",
            draggable: true,
            modal: true,
            resizable: false,
            title: "LOV."
        }).data("kendoWindow");





        //Initializing Main page details Kendo Grid Colums
        var DoctorPopupWindowGrid = $('#DoctorPopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "DoctorId",
                        fields: {
                            DoctorId: { type: "string" },
                            DoctorName: { type: "string" },
                            Specialization: { type: "string" },
                        }
                    }
                },
                pageSize: 5,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            scrollable: false,
            sortable: false,
            filterable: false,
            editable: false,
            selectable: "row",
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            toolbar: [{ template: "<input type='text' id='txtDoctorPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
            navigatable: true,
            columnMenu: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [
                 { field: "DoctorId", title: "Doctor Code" },
                 { field: "DoctorName", title: "Doctor Name" },
                 { field: "Specialization", title: "Specialization" },
                 

            ]

        }).data('kendoGrid');



        //Produc Name twise Filter table row
        $("#txtDoctorPopupInput").keyup(function () {
            var val = $(this).val();
            $("#DoctorPopupWindowGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                     { field: "DoctorId", operator: "contains", value: val },
                     { field: "DoctorName", operator: "contains", value: val }
                ]
            });
        });


        function PopUpDoctorList() {

            DoctorPopupWindow.center();
            DoctorPopupWindow.open();

            var model = {};


            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.MPGroup = $("#MPGroup").val();



            $.ajax({
                type: "POST",
                url: "/ProductWiseDoctorSelect/GetDoctor",
                data: JSON.stringify({ model: model }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $("#DoctorPopupWindowGrid").data("kendoGrid").dataSource.data(data);
                    }
                    else {
                        DoctorPopupWindow.close();
                        AcknowledgeMsg();
                        toastr.info($("#MessageText").html());
                    }
                }

            });

        }

        var ProductCode = "";
        $('#DoctorPopupWindowGrid').click(function () {
            var isTrue = 1;
            var grid = $(this).data('kendoGrid');
            var selectedItem = grid.dataItem(grid.select());
            var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
            data = dataSource.data(); // Get Detail Grid Data
            if (data.length > 0) {
                //for (var i = data.length - 1; i >= 0; i--) {
                for (var i = 0; i < data.length; i++) {
                    if (data[i].ProductCode + data[i].DoctorId == ProductCode + selectedItem.DoctorId) {

                        isTrue = 0;
                        WarningMsg();
                        toastr.warning($("#MessageText").html());
                    }
                }
            }
            if (isTrue == 1) {
                var gridCiItem = $("#MainGrid").data("kendoGrid");
                var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                selectedCiigItem.set("DoctorId", selectedItem.DoctorId);
                selectedCiigItem.set("DoctorName", selectedItem.DoctorName);
                selectedCiigItem.set("Specialization", selectedItem.Specialization);

            }

            var cell = $('#MainGrid').find('tbody tr:eq(0) td:eq(2)').focus(); // or different cell
            $('#MainGrid').data('kendoGrid').editCell(cell);

            DoctorPopupWindow.close();
        });






        function GetDetailDataForSaveUpdate(model) {

            $.ajax({
                type: "POST",
                url: "/ProductWiseDoctorSelect/GetDetailDataForSaveUpdate",
                data: JSON.stringify({ model: model }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $("#MainGrid").data("kendoGrid").dataSource.data(data);
                    }
                    else {
                        AcknowledgeMsg();
                        toastr.info("No Record Found!");

                    }
                },

            });
        }

        var gridInput = 0;
        function GridValidation() {
            gridInput = 0;
            var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
            data = dataSource.data(); // Get Detail Grid Data
            if (dataSource.view().length > 0) {
                for (var i = data.length - 1; i >= 0; i--) {
                    if ((data[i].InstCode == "Press (F9)") || (data[i].InstCode == "")) {
                        gridInput = 1;
                    }

                }
            }
            else {
                gridInput = 1;
            }
        }

        var master = { "MPGroup": "", "MonthNumber": "", "Year": "", "MasterStatus": "", "ProductWiseDoctorSelectDetail": [] };

        $('#btnSave').click(function () {

            GridValidation();



            var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('MPGroup');

            if (Input == 0 && gridInput == 0) {


                master.MPGroup = $("#MPGroup").val();

                master.MonthNumber = $("#MonthNumber").val();
                master.Year = $("#Year").val();


                var MainGrid = $("#MainGrid").data("kendoGrid").dataSource;
                data = MainGrid.data();

                master.ProductWiseDoctorSelectDetail = [];
                if (data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        var Detail = {};

                        Detail.ProductCode = data[i].ProductCode;
                        Detail.DoctorId = data[i].DoctorId;
                        master.ProductWiseDoctorSelectDetail.push(Detail);
                    }
                }

                $.ajax({
                    url: '/ProductWiseDoctorSelect/OperationsMode',
                    data: JSON.stringify(master),
                    type: 'POST',
                    contentType: 'application/json;',
                    dataType: 'json',
                    success: function (data) {
                        if (data.Status == "Yes") {
                            OperationMsg(data.Mode);
                            toastr.success($("#MessageText").html());
                        }
                        else {
                            ErrorFrmServerMsg(data.Status);
                            toastr.warning($("#MessageText").html());
                        }

                    },
                    error: function () {
                        ErrorFrmClientMsg();
                        toastr.warning($("#MessageText").html());
                    },
                    // complete: function () { CompletedMsg(); },
                }); //End of ajax call

            }

            else {
                ValidationMsg();
                toastr.warning($("#MessageText").html());
            }

        });

        $('#btnReset').click(function () {
            location.reload();
        });
        var ReportHeader = "";
        $('#btnZoomingView').click(function () {

            if ($("#Year").val() != "" && $("#MonthNumber").val() != "") {
                ReportHeader = "Year-Month: " + $("#Year").val() + "-" + $("#MonthNumber").val()
            }
            if ($("#TerritoryManagerID").val() != "") {
                ReportHeader = ReportHeader + ", TM: " + $("#TerritoryManagerName").val();
            }
           
            if ($("#MPGroup").val() != "") {
                ReportHeader = ReportHeader + ", MPO: " + $("#MPOName").val();

            }
            sessionStorage.setItem('keyYear', $("#Year").val());
            sessionStorage.setItem('keyMonthNumber', $("#MonthNumber").val());
            sessionStorage.setItem('keyTerritoryManagerID', $("#TerritoryManagerID").val());
            sessionStorage.setItem('keyMPGroup', $("#MPGroup").val());
            sessionStorage.setItem('keyReportHeader', ReportHeader);

            var Year = $("#Year").val();
            var MonthNumber = $("#MonthNumber").val();
            var TerritoryManagerID = $("#TerritoryManagerID").val();
   
            var MPGroup = $("#MPGroup").val();
            var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('MPGroup');
            if (Input == 0) {
                window.open("/DCR/ProductWiseDoctorSelect/frmProductWiseDoctorSelect2?Year=" + Year + "&MonthNumber=" + MonthNumber + "&TerritoryManagerID=" + TerritoryManagerID + "&MPGroup=" + $("#MPGroup").val() + "");

            }

            else {
                ValidationMsg();
                toastr.warning($("#MessageText").html());
            }
        });


    });

</script>







<div class="box-header with-border">
    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><div id="MessageText"></div></div>
        <div class="col-xs-0 col-sm-0 col-md-10 col-lg-10">
            <div style="text-align:right;">
                <div id="MessageText"></div><input type="checkbox" id="IsActive" class="chk" name="IsActive"> <label for="IsActive"> Hide</label>
                <button id="btnReset" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
                <button id="btnView" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-file"></i> View</button>
                <button id="btnStatus" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-check"></i> Status</button>
                <button id="btnSave" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-ok"></i> Approve</button>
                @*<button id="btnZoomingView" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-zoom-in"></i> Zoom</button>*@

            </div>
        </div>
    </div>
</div>
<div class="box-body">
    <div class="row" id="divValueParameter">
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Month - Year  :</div>
            <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                <div class="input-group">
                    <select id="MonthNumber" name="MonthNumber" class=" RequiredField form-control"></select>
                    <span class="input-group-btn" style="width:2px;"></span>
                    <input type="text" id="Year" class="datepicker RequiredField form-control" />
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3"></div>
            <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                <input type="hidden" id="MasterStatus" class="RequiredField form-control">
            </div>
        </div>

      <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Region Name :</div>
        <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
            <select id="RegionCode" name="RegionCode" class="RequiredField form-control"></select>
            <input type="hidden" id="RegionName" name="RegionName" class="RequiredField form-control">
        </div>
    </div>

    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Supervisor :</div>
        <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
            <select id="TerritoryManagerID" name="TerritoryManagerID" class="RequiredField form-control"></select>
            <input type="hidden" id="TerritoryManagerName" name="TerritoryManagerName" class="RequiredField form-control">
        </div>
    </div>
    <div class="row">
        <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">FF Name :</div>
        <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
            <select id="MPGroup" name="MPGroup" class="RequiredField form-control"></select>
            <input type="hidden" id="MPOName" name="MPOName" class="RequiredField form-control">
        </div>
    </div>


    </div>
</div>



<div class="row">
   <div id="MainGrid" class="MainGrid"></div>
   
</div>




<div id="RemoveConfirmationDetailWindow" class="modal" @*style="display:none;"*@>

    <div class="modal-body">
    </div>
    <div class="modal-footer">
        <input type="button" class="k-button hide-on-narrow" id="btnRemoveConfirmationDetailYes" style="width:70px" value="Yes" />
        <input type="button" class="k-button hide-on-narrow" id="btnRemoveConfirmationDetailNo" style="width:70px" value="No" />
    </div>
</div>


<div class="row">
    <div id="ProductPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="ProductPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>


<div class="row">
    <div id="DoctorPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="DoctorPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>

<div class="row">
    <div id="PopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="PopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>







<div class="row">
    <div id="TerritoryPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="TerritoryPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>

<div class="row">
    <div id="MPOPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="MPOPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>



<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 50%; color: White;">
        <img src="~/Content/Images/loading.gif" />
    </p>
</div>

<style>

    .k-grid .k-grid-content {
        min-height: 10px;
        max-height: 400px;
    }
</style>


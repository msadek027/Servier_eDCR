@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<script src="~/AdminLTE/plugins/jQuery/jquery-2.2.3.min.js"></script>
<link href="~/Content/CustomCSS/InputText.css" rel="stylesheet" />
<style>
    .k-grid-header .k-header {
        height: 15px;
        padding: 0;
    }

    .k-grid-header-wrap th {
        font-size: small !important;
    }

    .k-grid tbody tr {
        line-height: 12px;
    }

    .k-grid tbody td {
        padding: 0;
    }
</style>

<script type="text/javascript">


        //// Start  $(document).ready(function ()
        $(document).ready(function () {

            $.ajaxSetup({
                beforeSend: function () {
                    $("#divLoading").show();
                },
                complete: function () {
                    $("#divLoading").hide();
                }

            });
            EventPermission();
            $(".datepicker").datepicker({
                format: " yyyy",
                viewMode: "years",
                minViewMode: "years",
                autoclose: true
            });

            $("#Year").val(yyyy);
            LoadMonth();
            LoadMPO();
            var ItemType = "";

            $('#Year').attr('disabled', true);
            $('#MonthNumber').attr('disabled', true);




            $('#IsActive').click(function () {
                if ($(this).is(':checked')) {
                    $(this).siblings('label').html('Unhide');
                    $('#divValueParameter').hide();
                }
                else {
                    $(this).siblings('label').html('Hide');
                    $('#divValueParameter').show();
                }
            });
            function LoadMPO() {

                $.ajax({
                    url: '/Default/GetUserWiseMPOList',
                    type: 'get',
                    dataType: 'json',
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        $.each(data, function (i, item) {
                            $('#MPGroup').append($('<option>', { value: item.MPGroup, html: item.MPOName }, '<option/>'));
                        });
                    },

                    error: function () {
                        alert("Failed to load...");
                    }
                });
            }






            function LoadProduct(model) {
                $('#ProductCode').empty();
                $.ajax({
                    type: "POST",
                    url: "/PromotionalItemViewEdit/GetProduct",
                    data: JSON.stringify({ model : model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {

                        $.each(data, function (i, item) {
                            $('#ProductCode').append($('<option>', { value: item.ProductCode, html: item.ProductName }, '<option/>'));
                        });
                    },
                    error: function () {
                        alert("Failed to load !!");
                    }
                });
            }


            $('#btnNew').click(function () {

                var Input = InputValidation('ItemType') + InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('MPGroup') + InputValidation('ItemFor');

                if (Input == 0) {

                    NewMainWindow.center();
                    NewMainWindow.open();
                    NewWindow();

                }
            else {

              ValidationMsg();
              toastr.info($("#MessageText").html());

            }
            });


            function NewWindow()
            {
                var model = {};
                model.Year = $("#Year").val();
                model.MonthNumber = $("#MonthNumber").val();
                model.TerritoryManagerID = $("#TerritoryManagerID").val();

                model.MPGroup = $("#MPGroup").val();;
                model.ItemType = $("#ItemType").val();
                model.ItemFor = $("#ItemFor").val();
                LoadProduct(model);

            }
            $('#btnReset').click(function () {
                location.reload();
            });
            //***************view function*****************
            $('#btnView').click(function () {

                $("body").addClass('sidebar-collapse').trigger('collapsed.pushMenu');
                $('#MainGrid').data('kendoGrid').dataSource.filter([]);
                $('#MainGrid').data('kendoGrid').dataSource.data([]);


                var model = {};

                model.Year = $("#Year").val();
                model.MonthNumber = $("#MonthNumber").val();
                model.ItemFor = $("#ItemFor").val();
                model.MPGroup = $("#MPGroup").val();;
                model.ItemType = $("#ItemType").val();
                var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('ItemType') + InputValidation('MPGroup');

                if (Input==0) {
                    $.ajax({
                        type: "POST",
                        url: "/PromotionalItemViewEdit/MainGridDataNew",
                        data: JSON.stringify({ model: model }),
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            if (data.length > 0) {
                                $("#MainGrid").data("kendoGrid").dataSource.data(data);
                            }
                            else {
                                AcknowledgeMsg();
                                toastr.info($("#MessageText").html());

                            }
                        },

                    });
                }
                else {
                    ValidationMsg();
                    toastr.info($("#MessageText").html());
                }

            });


            function LoadMonth() {
                $.ajax({
                    url: '/Default/GetGenMonth',
                    type: 'GET',
                    dataType: 'JSON',
                    data: "{}",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                        $.each(data, function (i, item) {
                            $('#MonthNumber').append($('<option>', { value: item.MonthNumber, html: item.MonthName }, '<option/>'));
                        });
                    },
                    error: function () {
                        alert("Failed to load ... !!");
                    }
                });
            }









            //Initializing Main page details Kendo Grid Colums
            var MainGrid = $('#MainGrid').kendoGrid({
                dataSource: new kendo.data.DataSource({
                    batch: true,
                    schema: {
                        model: {
                            id: "ProductCode",
                            fields: {
                                ProductCode: { type: "string" },
                                ProductName: { type: "string", defaultValue: "Press any key" },
                                GainQty: { type: "Number" },
                                LossQty: { type: "Number" },
                                PhysicalQty: { type: "Number" },
                            }
                        }
                    },
                  //  pageSize: 10,
                }),
                pageable: {
                    pageSizes: true, buttonCount: 5
                },
                dataBound: function (e) {
                    AutoFitColumn(this.element[0].id);
                },
                toolbar: [{ text: "Add New", className: "btnAddNew", style: "float:left", imageClass: "k-icon k-add", attributes: { "class": "k-grid-toolbar k-button" } }, { name: "excel", text: "Export to Excel" }, { template: "<input type='text' id='txtInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],
                excel: {
                    fileName: "PromotionalItem.xlsx",
                    allPages: true,
                    filterable: true,
                },

                edit: function (e) {
                    $("[name='ProductName']", e.container).on('keyup keypress keydown  click', function (e) {
                        PopUpProductList();

                    });
                    $('input[name = "ProductCode"]').attr("readonly", true);
                    $('input[name = "ProductName"]').attr("readonly", false);
                    $('input[name = "MPGroup"]').attr("readonly", true);
                    $('input[name = "RestQty"]').attr("readonly", true);
                    $('input[name = "CentralQty"]').attr("readonly", true);
                    $('input[name = "VariableQty"]').attr("readonly", true);
                    $('input[name = "GivenQty"]').attr("readonly", true);
                    $('input[name = "TotalQty"]').attr("readonly", true);
                    $('input[name = "ExecuteQty"]').attr("readonly", true);
                    $('input[name = "BalanceQty"]').attr("readonly", true);
                },
                scrollable: true,
                sortable: false,

                editable: true,
                selectable: "row",
                columnMenu: false,
                reorderable: false,



                //scrollable: false,
                //sortable: true,


                //editable: true,
                //selectable: "row",

                //columnMenu: false,
                //reorderable: false,
                //resizable: true,
                resize: function (e) {
                    this.table.height(this.element.height() + this.table.height() - 1);
                },

                columns: [
                     { field: "ProductCode", hidden: true, title: "Product Code" },
                     { field: "ProductName", hidden: false, title: "Product Name", locked: true },
                     { field: "MPGroup", title: "MPGroup", hidden: true },
                     { field: "RestQty", title: "Carry</br>Qty"},
                     { field: "CentralQty", title: "Receive</br>Qty" },
                     { field: "VariableQty", title: "Add/Defi</br>Qty" },
                     { field: "TotalQty", title: "Total</br>Qty"},
                     { field: "GivenQty", title: "GivenQty", hidden: true },
                     { field: "ExecuteQty", title: "Execute</br>Qty", hidden: true },
                     { field: "BalanceQty", title: "Balance</br>Qty" },
                     { field: "GainQty", title: "Add(+)</br>Qty", hidden: true},
                     { field: "LossQty", title: "Defi(-)</br>Qty", hidden: true},
                     { field: "PhysicalQty", title: "Physical</br>Qty" },
                     { field: "Remark", title: "Remarks" },
                     { command: [{ name: "UpdateRow", text: "Save", imageClass: "k-icon k-edit", click: UpdateDataFrmMainGrid }], title: "Save", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center;" } },
                     //{ command: [{ name: "NewRow", text: "New", imageClass: "k-icon k-add", click: NewDataFrmMainGrid }], title: "New", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center;" } },
                    // { command: [{ name: "VoidRow", text: "Delete", imageClass: "k-icon k-i-close", click: VoidDataFrmMainGrid }], title: "Delete", headerAttributes: { "class": "gridHeader", style: "font-weight: bold;font-size: 13px;text-align: center;" } },



                ]
            }).data('kendoGrid');

            $("#MainGrid .k-grid-header-wrap").css("overflow", "hidden");
            $("#MainGrid .k-grid-content").css("overflow-y", "scroll").css("overflow-x", "auto").scroll(function () {
                var left = $(this).scrollLeft();
                var wrap = $("#MainGrid > .k-grid-header-wrap");
                if (wrap.scrollLeft() != left) wrap.scrollLeft(left);
            });
            $(".btnAddNew").click(function (e) {
                e.preventDefault();
                var Input = InputValidation('MPGroup');
                if (Input == 0) {


                    AddRowToDetailGrid();
                }
                else {

                    ValidationMsg();
                    //toastr.warning($("#MessageText").html());
                    toastr.warning("Select Main Grid Row");
                }

            });


            function AddRowToDetailGrid() {

                var addflag = 1; // For Row Add in Detail Grid using enter Key Press
                var grid = $("#MainGrid").data("kendoGrid");
                $("#MainGrid").data().kendoGrid.bind('dataBound', function () {
                    this.element.find('tbody tr:first').addClass('k-state-selected');
                    //e.container.find("td:eq(2) input").focus();
                });
                var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
                var data = dataSource.data()
                var addData = dataSource.data();
                if (addData != null) { // For Add row when Exiting Data in Grid

                    for (var i = 0; i < addData.length; i++) {

                        if (addData[i].BalanceQty == "undefined" || addData[i].BalanceQty == "" || addData[i].BalanceQty == null ) {

                            if (addData[i].GainQty == "0" && addData[i].LossQty == "0") {
                                addflag = 0;
                            }
                        }
                        if (addData[i].ProductCode == "" || addData[i].ProductName == null || addData[i].ProductName == "" || addData[i].ProductName == "Press any key" ) {
                            addflag = 0;
                        }
                    }
                }
                if (addflag == 1) {
                    grid.addRow();
                }
                //var cell = $('#MainGrid').find('tbody tr:eq(0) td:eq(0)').focus(); // or different cell
                //$('#MainGrid').data('kendoGrid').editCell(cell);
            }



            var updateItem = {};
            function UpdateDataFrmMainGrid(e) {
                e.preventDefault();
                updateItem = MainGrid.dataItem($(e.currentTarget).closest("tr"));
                UpdateMainData(updateItem);

            };

            var voidData = {};
            function VoidDataFrmMainGrid(e) {
                e.preventDefault();
                voidData = MainGrid.dataItem($(e.currentTarget).closest("tr"));

                if ( voidData.ProductName== "Press any key")
                     {
                    MainGrid.dataSource.remove(voidData);
                }

                else {
                    VoidMainData(voidData);
                }



            };

            var NewMainWindow = $("#NewMainWindow").kendoWindow({
                width: "50%",
                height: "50%",
                draggable: true,
                modal: true,
                resizable: false,
                title: "LOV"
            }).data("kendoWindow");



            function UpdateMainData(data) {
                var Input = InputValidation('ItemType') + InputValidation('MonthNumber') + InputValidation('Year');

                if (Input == 0 && data.Remark != "" && data.Remark != null && voidData.ProductName != "Press any key") {
                    var model = { "ItemType": "", "ItemList": [] };
                    model.ItemType = $("#ItemType").val();

                    model.ItemList = [];
                    var detail = {};
                    detail.ProductCode = data.ProductCode;

                    detail.RestQty = data.RestQty;

                    detail.GivenQty = data.GivenQty;
                    detail.TotalQty = data.TotalQty;

                    detail.ExecuteQty = data.ExecuteQty;
                    detail.BalanceQty = data.BalanceQty;
                    detail.LossQty = data.LossQty;
                    detail.GainQty = data.GainQty;
                    detail.PhysicalQty = data.PhysicalQty;

                    detail.Remark = data.Remark;

                    detail.ItemFor = $('#ItemFor').val();
                    detail.ItemType = $('#ItemType').val();
                    detail.MPGroup = $('#MPGroup').val();
                    detail.MonthNumber = $('#MonthNumber').val();
                    detail.Year = $('#Year').val();

                    model.ItemList.push(detail);

                    $.ajax({
                        url: '/PromotionalItemViewEdit/OperationsModeSaveSingle',
                        data: JSON.stringify(model),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (data) {
                            if (data.Status == "Yes") {
                                OperationMsg(data.Mode);
                                toastr.success($("#MessageText").html());

                                $("#btnView").click();
                            }
                            else {
                                ErrorFrmServerMsg(data.Status);
                                toastr.warning($("#MessageText").html());
                            }

                        },
                        error: function () {
                            ErrorFrmClientMsg();
                            toastr.warning($("#MessageText").html());
                        },
                        // complete: function () { CompletedMsg(); },
                    }); //End of ajax call
                }
                else {
                    //ValidationMsg();
                    //toastr.info($("#MessageText").html());
                    toastr.info("Put your Remark.");
                }
            }
            function VoidMainData(data) {
                var Input = InputValidation('ItemType') + InputValidation('MonthNumber') + InputValidation('Year');

                if (Input == 0 && data.Remark != "" && data.Remark != null) {

                var model = { "ItemType": "", "ItemList": [] };
                model.ItemType = $("#ItemType").val();

                model.ItemList = [];
                var detail = {};

                detail.ProductCode = data.ProductCode;
                detail.RestQty = data.RestQty;

                detail.GivenQty = data.GivenQty;
                detail.TotalQty = data.TotalQty;

                detail.ExecuteQty = data.ExecuteQty;
                detail.BalanceQty = data.BalanceQty;
                detail.LossQty = data.LossQty;
                detail.GainQty = data.GainQty;
                detail.Remark = data.Remark;
                detail.ItemFor = $('#ItemFor').val();
                detail.ItemType = $('#ItemType').val();
                detail.MPGroup = $('#MPGroup').val();
                detail.MonthNumber = $('#MonthNumber').val();
                detail.Year = $('#Year').val();
                model.ItemList.push(detail);


                    $.ajax({
                        url: '/PromotionalItemViewEdit/OperationsModeVoidSingle',
                        data: JSON.stringify(model),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (data) {
                            if (data.Status == "Yes") {
                                OperationMsg(data.Mode);
                                toastr.success($("#MessageText").html());
                            }
                            else {
                                ErrorFrmServerMsg(data.Status);
                                toastr.warning($("#MessageText").html());
                            }

                        },
                        error: function () {
                            ErrorFrmClientMsg();
                            toastr.warning($("#MessageText").html());
                        },
                        // complete: function () { CompletedMsg(); },
                    }); //End of ajax call
                }
                else {
                    //ValidationMsg();
                    //toastr.info($("#MessageText").html());
                    toastr.info("Put your Remark.");
                }
            }







            //Produc Name twise Filter table row
            $("#txtInput").keyup(function () {
                var val = $(this).val();
                $("#MainGrid").data("kendoGrid").dataSource.filter({
                    logic: "or",
                    filters: [
                        { field: "ProductCode", operator: "contains", value: val },
                        { field: "ProductName", operator: "contains", value: val },
                     



                    ]
                });
            });

            //************************************ END *****************************************//
            $("#ItemType").change(function () {
              var  ItemType = $("#ItemType").val();

                $('#MainGrid').data('kendoGrid').dataSource.filter([]);
                $('#MainGrid').data('kendoGrid').dataSource.data([]);

            });

            var gridInput = 0;
            function GridValidation() {
                gridInput = 0;

                var ItemType = $("#ItemType").val();


                    var detailData = $('#MainGrid').data("kendoGrid").dataSource;
                    var detailDataList = detailData.data();
                    if (detailDataList.length > 0) {
                        for (var i = 0; i < detailDataList.length; i++) {
                            if (detailDataList[i].ProductCode == "") {
                                gridInput = 1;
                            }


                        }
                    }
                    else {
                        gridInput = 1;
                    }


            }

            var DataArray = [];

            $('#MainGrid').click(function () {

                $("body").addClass('sidebar-collapse').trigger('collapsed.pushMenu');
               // $("body").removeClass('sidebar-collapse').trigger('expanded.pushMenu');

                var gridData = $("#MainGrid").data("kendoGrid");
                var selectedItem = (gridData.dataItem(gridData.select()));

                if ( selectedItem.Remark != "") {
                    DataArray.push(selectedItem);
                }
            });


            var ProductPopupWindow = $("#ProductPopupWindow").kendoWindow({
                width: "50%",
                //height: "50%",
                draggable: true,
                //iframe: true,
                modal: true,
                resizable: false,
                title: "LOV."
            }).data("kendoWindow");





            //Initializing Main page details Kendo Grid Colums
            var ProductPopupWindowGrid = $('#ProductPopupWindowGrid').kendoGrid({
                dataSource: new kendo.data.DataSource({
                    batch: true,
                    schema: {
                        model: {
                            id: "ProductCode",
                            fields: {
                                ProductCode: { type: "string" },
                            }
                        }
                    },
                    //pageSize: 5,
                }),
                pageable: {
                    pageSizes: true, buttonCount: 5
                },
                dataBound: function (e) {
                    AutoFitColumn(this.element[0].id);
                },
                scrollable: true,
                sortable: false,
                filterable: false,
                editable: false,
                selectable: "row",
                toolbar: [{ template: "<input type='text' id='txtProductPopupInput'  style='float:right' placeholder='Search...' class='k-textbox'>" }, ],

                columnMenu: false,
                resizable: false,
                resize: function (e) {
                    this.table.height(this.element.height() + this.table.height() - 1);
                },
                columns: [
                     { field: "ProductName", title: "Product Name" },
                     { field: "ProductCode", title: "Product Code" },

                ]

            }).data('kendoGrid');



            //Produc Name twise Filter table row
            $("#txtProductPopupInput").keyup(function () {
                var val = $(this).val();
                $("#ProductPopupWindowGrid").data("kendoGrid").dataSource.filter({
                    logic: "or",
                    filters: [
                         { field: "ProductCode", operator: "contains", value: val },
                         { field: "ProductName", operator: "contains", value: val },
                    ]
                });
            });


            function PopUpProductList() {

                ProductPopupWindow.center();
                ProductPopupWindow.open();

                var model = {};
                model.Year = $("#Year").val();
                model.MonthNumber = $("#MonthNumber").val();
                model.TerritoryManagerID = $("#TerritoryManagerID").val();

                model.MPGroup = $("#MPGroup").val();;
                model.ItemType = $("#ItemType").val();
                model.ItemFor = $("#ItemFor").val();

                $.ajax({
                    type: "POST",
                    url: "/PromotionalItemViewEdit/GetProduct",
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {

                        if (data.length > 0) {
                            $("#ProductPopupWindowGrid").data("kendoGrid").dataSource.data(data);
                        }

                        else {

                            ProductPopupWindow.close();
                            AcknowledgeMsg();
                            toastr.info($("#MessageText").html());
                        }
                    }

                });

            }
            $('#ProductPopupWindowGrid').click(function () {
                var isTrue = 1;
                var grid = $(this).data('kendoGrid');
                var selectedItem = grid.dataItem(grid.select());

                var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
                data = dataSource.data();
                if (data.length > 0) {
                    for (var i = 0; i < data.length; i++) {
                        if (data[i].ProductCode == selectedItem.ProductCode) {
                            isTrue = 0;
                            WarningMsg();
                            toastr.warning($("#MessageText").html());
                        }


                    }
                }
                if (isTrue == 1) {
                    var gridCiItem = $("#MainGrid").data("kendoGrid");
                    var selectedCiigItem = (gridCiItem.dataItem(gridCiItem.select()));
                    selectedCiigItem.set("ProductCode", selectedItem.ProductCode);
                    selectedCiigItem.set("ProductName", selectedItem.ProductName);


                }

                var cell = $('#MainGrid').find('tbody tr:eq(0) td:eq(11)').focus(); // or different cell
                $('#MainGrid').data('kendoGrid').editCell(cell);

                ProductPopupWindow.close();
            });

           var model = {};
            $('#btnSave').click(function () {


                var Input = InputValidation('MonthNumber') + InputValidation('Year');
                var ItemType = $('#ItemType').val();
                model.ItemType = $('#ItemType').val();



                //GridValidation();
                if (Input == 0) {

                    $("#MainGrid").data("kendoGrid").dataSource.filter({ field: "dirty", operator: "equals", value: true });
                    var dataSource = $("#MainGrid").data("kendoGrid").dataSource;
                    var filters = dataSource.filter();
                    var allData = dataSource.data();
                    var query = new kendo.data.Query(allData);
                    var data = query.filter(filters).data;


                    //var data = MainGrid.dataSource.filter({ field: "dirty", operator: "equals", value: true });

                    //var data = DataArray;
                        model.ItemList = [];
                        if (data.length > 0) {

                            for (var i = 0; i < data.length; i++) {
                                var detail = {};
                                detail.ProductCode = data[i].ProductCode;
                                detail.MPGroup = data[i].MPGroup;
                                detail.RestQty = data[i].RestQty;
                                detail.GivenQty = data[i].GivenQty;
                                detail.TotalQty = data[i].TotalQty;

                                detail.ExecuteQty = data[i].ExecuteQty;

                                detail.BalanceQty = data[i].BalanceQty;
                                detail.GainQty = data[i].GainQty;
                                detail.LossQty = data[i].LossQty;

                                detail.MonthNumber = $('#MonthNumber').val();
                                detail.Year = $('#Year').val();
                                model.ItemList.push(detail);

                            }
                        }




                    $.ajax({
                        url: '/PromotionalItemViewEdit/OperationsModeDirtyAllSaveUpdate',
                        data: JSON.stringify(model),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (data) {
                            if (data.Status == "Yes") {
                                OperationMsg(data.Mode);
                                toastr.success($("#MessageText").html());
                            }
                            else {
                                ErrorFrmServerMsg(data.Status);
                                toastr.warning($("#MessageText").html());
                            }

                        },
                        error: function () {
                            ErrorFrmClientMsg();
                            toastr.warning($("#MessageText").html());
                        },

                    });

                }

                else {
                    ValidationMsg();
                    toastr.info($("#MessageText").html());
                }
                $("#btnView").click();
            });






            $('#btnSavePopup').click(function () {

                var Input = InputValidation('ItemType') + InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('ProductCode') + InputValidation('GainQty') + InputValidation('Remark');

                if (Input == 0) {
                    var model = { "ItemType": "", "ItemList": [] };
                    model.ItemType = $("#ItemType").val();

                    model.ItemList = [];
                    var detail = {};
                    detail.ProductCode = $("#ProductCode").val();
                    detail.MPGroup = $("#MPGroup").val();
                    detail.Remark = $("#Remark").val();
                    detail.GainQty = $("#GainQty").val();
                    detail.ItemType = $("#ItemType").val();
                    detail.ItemFor = $('#ItemFor').val();
                    detail.MonthNumber = $('#MonthNumber').val();
                    detail.Year = $('#Year').val();
                    model.ItemList.push(detail);

                    $.ajax({
                        url: '/PromotionalItemViewEdit/OperationsModeSaveNew',
                        data: JSON.stringify(model),
                        type: 'POST',
                        contentType: 'application/json;',
                        dataType: 'json',
                        success: function (data) {
                            if (data.Status == "Yes") {
                                OperationMsg(data.Mode);
                                toastr.success($("#MessageText").html());
                            }
                            else {
                                ErrorFrmServerMsg(data.Status);
                                toastr.warning($("#MessageText").html());
                            }
                            NewMainWindow.close();
                            $("#btnView").click();
                        },
                        error: function () {
                            ErrorFrmClientMsg();
                            toastr.warning($("#MessageText").html());
                        },
                        // complete: function () { CompletedMsg(); },
                    }); //End of ajax call
                }
                else {
                    ValidationMsg();
                    toastr.info($("#MessageText").html());
                }

            });
            var ReportHeader = "";
            $('#btnZoomingView').click(function () {

                if ($("#Year").val() != "" && $("#MonthNumber").val() != "") {
                    ReportHeader = "Year-Month: " + $("#Year").val() + "-" + $("#MonthNumber").val()
                }


                if ($("#MPGroup").val() != "") {
                    ReportHeader = ReportHeader + ", MPO: " + $("#MPGroup").val();

                }
                if ($("#ItemType").val() != "" && $("#ItemFor").val() != "") {
                    ReportHeader = ReportHeader + ", Item: " + $("#ItemType").val() + $("#ItemFor").val();
                }
                sessionStorage.setItem('keyYear', $("#Year").val());
                sessionStorage.setItem('keyMonthNumber', $("#MonthNumber").val());
                sessionStorage.setItem('keyItemType', $("#ItemType").val());
                sessionStorage.setItem('keyItemFor', $("#ItemFor").val());
                sessionStorage.setItem('keyMPGroup', $("#MPGroup").val());

                sessionStorage.setItem('keyReportHeader', ReportHeader);

                var Year = $("#Year").val();
                var MonthNumber = $("#MonthNumber").val();
                var ItemType = $("#ItemType").val();
                var ItemFor = $("#ItemFor").val();
                var MPGroup = $("#MPGroup").val();

                var Input = InputValidation('MonthNumber') + InputValidation('Year') + InputValidation('MPGroup');
                if (Input == 0) {
                    window.open("/DCR/PromotionalItemViewEdit/frmPromotionalItemViewEdit2");

                }

                else {
                    ValidationMsg();
                    toastr.warning($("#MessageText").html());
                }
            });

        });




</script>



<div class="box-header with-border">


    <div class="row">
        <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><div id="MessageText"></div></div>
        <div class="col-xs-0 col-sm-0 col-md-10 col-lg-10">
            <div style="text-align:right;">
                <input type="checkbox" id="IsActive" class="chk" name="IsActive"> <label for="IsActive"> Hide</label>
                <button id="btnReset" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-refresh"></i> Reset</button>
                <button id="btnView" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-file"></i> View</button>
            </div>
        </div>



    </div>
</div>
<div class="box-body">
    <div class="row" id="divValueParameter">

        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Month - Year  :</div>
            <div class="col-xs-0 col-sm-0 col-md-6 col-lg-6">
                <div class="input-group">
                    <select id="MonthNumber" name="MonthNumber" class=" RequiredField form-control"></select>
                    <span class="input-group-btn" style="width:2px;"></span>
                    <input type="text" id="Year" class="datepicker RequiredField form-control" />
                </div>
            </div>
            <div class="col-xs-0 col-sm-0 col-md-2 col-lg-2"> </div>
            </div>
        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">MPO Name :</div>
            <div class="col-xs-0 col-sm-0 col-md-6 col-lg-6">
                <select id="MPGroup" class="MPGroup RequiredField form-control"></select>


            </div>
            <div class="col-xs-0 col-sm-0 col-md-2 col-lg-2"> </div>
        </div>




        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Item Type - For :</div>
            <div class="col-xs-0 col-sm-0 col-md-6 col-lg-6">
                <div class="input-group">
                    <select id="ItemType" name="ItemType" class="RequiredField form-control">
                        <option value="Sm">Sample Item</option>
                        <option value="Sl">Selected Item</option>
                        <option value="Gt">Gift Item</option>
                    </select>
                    <span class="input-group-btn" style="width:2px;"></span>
                    <select id="ItemFor" name="ItemFor" class="RequiredField form-control">
                        <option value="R">Regular</option>
                        <option value="I">Intern</option>
                    </select>
                </div>
            </div>
            <div class="col-xs-0 col-sm-0 col-md-2 col-lg-2"> </div>
        </div>

        </div>

    <div class="row"> <div id="MainGrid"></div></div>
</div>

<div class="row">
    <div id="ProductPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="ProductPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>

<div class="row">
    <div id="NewMainWindow" class="PopupWindowLayout" style="display: none;">


        <div class="input-group">
            <span class="input-group-addon">Product :</span>
            <select id="ProductCode" name="ProductCode" class="RequiredField input-sm">
                <option></option>
            </select>
        </div>
        <div class="input-group">
            <span class="input-group-addon">Quantity:</span>
            <input type="number" id="GainQty" min="0" name="GainQty" class="RequiredField input-sm">
        </div>
        <div class="input-group">
            <span class="input-group-addon">Remark:</span>
            <input type="text" id="Remark" name="Remark" class="RequiredField input-sm">
        </div>

        <div class="input-group">
            <span class="input-group-btn" style="width:10px;"></span>
            <button id="btnSavePopup" class="btn btn-primary input-sm" type="button"><i class="glyphicon glyphicon-save-file"></i>Add</button>
            <span class="input-group-btn" style="width:5px;"></span>

        </div>

    </div>
</div>


</div>
<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 50%; color: White;">
        <img src="~/Content/Images/loading.gif" />
    </p>
</div>
<style>
    #NewMainWindowGrid .k-grid-content {
        min-height: 170px;
        max-height: 170px;
    }

    #NewGiftWindowGrid .k-grid-content {
        min-height: 170px;
        max-height: 170px;
    }
</style>

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}







<div class="box-header with-border">
    <form class="form" action="/ReportDCRItemExecution/Export" id="R1Form" method="post" name="H1Form" target="_blank">
        <div class="row">
            <div class="col-xs-12 col-sm-12 col-md-2 col-lg-2"><div id="MessageText"></div></div>
            <div class="col-xs-0 col-sm-0 col-md-10 col-lg-10">
                <div style="text-align:right;">
                    <input type="checkbox" id="IsActive" class="chk" name="IsActive"> <label for="IsActive"> Hide</label>
                    <button id="btnExcel" class="btn btn-primary btn-sm" name="ExportType" value="Excel" type="submit"><i class="glyphicon glyphicon-envelope"></i> Excel </button>
                    <button id="btnPDF" class="btn btn-primary btn-sm" name="ExportType" value="PDF" type="submit"><i class="glyphicon glyphicon-book"></i> PDF </button>
                    <button id="btnView" class="btn btn-primary btn-sm" type="button"><i class="glyphicon glyphicon-file"></i> View</button>
                </div>
            </div>
        </div>
        <div class="box-body">
            <div class="row" id="divValueParameter">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Month - Year:</div>
                    <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                        <div class="input-group">
                            <select id="MonthNumber" name="MonthNumber" class="RequiredField form-control"></select>
                            <span class="input-group-btn" style="width:0px;"></span>
                            <input type="text" id="Year" name="Year" class="datepicker RequiredField form-control" />



                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Region Name :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="RegionCode" name="RegionCode" class="RequiredField form-control"></select>
                        <input type="hidden" id="RegionName" name="RegionName" class="RequiredField form-control">
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">Supervisor :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="TerritoryManagerID" name="TerritoryManagerID" class="RequiredField form-control"></select>
                        <input type="hidden" id="TerritoryManagerName" name="TerritoryManagerName" class="RequiredField form-control">
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">FF Name :</div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">
                        <select id="MPGroup" name="MPGroup" class="RequiredField form-control"></select>
                        <input type="hidden" id="MPOName" name="MPOName" class="RequiredField form-control">
                    </div>
                </div>



                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">
                        Item Type :
                    </div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">

                        <select id="ItemType" name="ItemType" class="RequiredField form-control ItemType">
                            <option value=""></option>
                            <option value="SlR">Selected Item and Regular</option>
                            <option value="SmR">Sample Item and Regular</option>
                            <option value="SmI">Sample Item and Intern</option>
                            <option value="GtR">Material Item and Regular</option>
                            <option value="GtI">Material Item and Intern</option>
                        </select>

                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3"></div>
                    <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
              
                    </div>
                </div>



                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2 col-lg-2">
                        Product :
                    </div>
                    <div class="col-xs-0 col-sm-0 col-md-4 col-lg-4">

                        <select id="ProductCode" class="ProductCode RequiredField form-control"><option> </option></select>

                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3 col-lg-3"></div>
                    <div class="col-xs-0 col-sm-0 col-md-3 col-lg-3">
                
                    </div>
                </div>



            </div>
        </div>
    </form>
</div>
<div class="row">
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <div id="MainGrid" class="MainGrid"></div>

    </div>
</div>





<div class="row">
    <div id="DetailPopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="Parameter"></div>
        <div id="DetailPopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>


<div class="row">
    <div id="ExecutePopupWindow" class="PopupWindowLayout" style="display: none;">
        <div id="Parameter2"></div>
        <div id="ExecutePopupWindowGrid" class="PopUpGrid"></div>
    </div>
</div>


<div id="divLoading" style="margin: 0px; padding: 0px; position: fixed; right: 0px;
    top: 0px; width: 100%; height: 100%; background-color: #666666; z-index: 30001;
    opacity: .8; filter: alpha(opacity=70);display:none">
    <p style="position: absolute; top: 50%; left: 50%; color: White;">
        <img src="~/Content/Images/loading.gif" />
    </p>
</div>



  



<script src="~/AdminLTE/plugins/jQuery/jquery-2.2.3.min.js"></script>
<link href="~/Content/CustomCSS/InputText.css" rel="stylesheet" />
<script src="~/Scripts/CustomJS/DefaultValue.js"></script>
<link href="~/Content/CustomCSS/exportPDF.css" rel="stylesheet" />

<script type="text/javascript">
    //// Start  $(document).ready(function ()
    $(document).ready(function () {

        $.ajaxSetup({
            beforeSend: function () {
                $("#divLoading").show();
            },
            complete: function () {
                $("#divLoading").hide();
            }
        });


        EventPermission();


        function LoadMonth() {
            $.ajax({
                url: '/Default/GetGenMonth',
                type: 'GET',
                dataType: 'JSON',
                data: "{}",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#MonthNumber').append($('<option>', { value: item.MonthNumber, html: item.MonthName }, '<option/>'));
                    });
                },
                error: function () {
                    alert("Failed to load !!");
                }
            });
        }



        LoadRegion();


        function LoadRegion() {
            $.ajax({
                url: '/Default/GetRegion',
                type: 'get',
                dataType: 'json',
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#RegionCode').append($('<option>', { value: item.RegionCode, html: item.RegionName }, '<option/>'));
                        if (i === 0) {                        
                            LoadTM(item.RegionCode);
                        }
                        $('#RegionName').val(item.RegionName);
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }
        $('#RegionCode').on('change', function () {
            LoadTM($(this).val());
            $('#RegionName').val($("#RegionCode option:selected").text());
        }).trigger('change');;

        function LoadTM(RegionCode) {
            $.ajax({
                url: '/Default/GetTerritoryFromRegion',
                data: { RegionCode: RegionCode },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#TerritoryManagerID').empty();
                    $.each(data, function (i, item) {

                        if (i === 0) {
                            if (data.length>1)
                            {
                                $('#TerritoryManagerID').append('<option value="" selected="selected"></option>');
                            }
                            LoadMPO(item.TerritoryManagerID);
                            $('#TerritoryManagerName').val(item.TerritoryManagerName);
                        }
                        $('#TerritoryManagerID').append($('<option>', { value: item.TerritoryManagerID, html: item.TerritoryManagerName }, '<option/>'));
                      
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        }



        $('#TerritoryManagerID').on('change', function () {
            LoadMPO($(this).val());
            $('#TerritoryManagerName').val($("#TerritoryManagerID option:selected").text());
        }).trigger('change');;




        function LoadMPO(TerritoryManagerID) {

            $.ajax({
                url: '/Default/GetMPOPopupList',
                data: { TerritoryManagerID: TerritoryManagerID },
                type: 'Post',
                dataType: 'json',
                success: function (data) {
                    $('#MPGroup').empty();
                    $.each(data, function (i, item) {
                        if (i == 0) {
                            $('#MPGroup').append('<option value="" selected="selected"></option>');
                            $('#MPOName').val(item.MPOName );
                        }
                        $('#MPGroup').append($('<option>', { value: item.MPGroup, html: item.MPOName  }, '<option/>'));
                    });
                },

                error: function () {
                    alert("Failed to load...");
                }
            });

        }
        LoadTM($("#RegionCode").val());
        LoadMPO($("#TerritoryManagerID").val());

        $('#MPGroup').on('change', function () {
            $('#MPOName').val($("#MPGroup option:selected").text());
        }).trigger('change');;


        $("#TerritoryManagerID,#MPGroup").on('change', function (e) {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

        });

        $('#btnReset').click(function () {
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);
            ResetData();
            $('.ItemType').val("");
            $("#ItemType").val('').trigger('change');

            $("#Year").val(yyyy);
            
        });






        $('#IsActive').click(function () {
            if ($(this).is(':checked')) {
                $(this).siblings('label').html('Unhide');
                $('#divValueParameter').hide();
            }
            else {
                $(this).siblings('label').html('Hide');
                $('#divValueParameter').show();
            }
        });


        $('#btnView').click(function () {
            $("body").addClass('sidebar-collapse').trigger('collapsed.pushMenu');
            $('#MainGrid').data('kendoGrid').dataSource.filter([]);
            $('#MainGrid').data('kendoGrid').dataSource.data([]);

            var model = {};

            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = $("#MPGroup").val();


            model.ItemType = $("#ItemType").val();
            model.ProductCode = $("#ProductCode").val();

            


            var Input = InputValidation('MonthNumber') + InputValidation('Year')+ InputValidation('TerritoryManagerID');
            if (Input == 0 ) {
                $.ajax({
                    type: "POST",
                    url: "/ReportDCRItemExecution/GetGridData",
                    data: JSON.stringify({ model: model }),
                    contentType: "application/json; charset=utf-8",
                    dataType: "json",
                    success: function (data) {
                        if (data.length > 0) {
                            $("#MainGrid").data("kendoGrid").dataSource.data(data);
                        }
                        else {
                            AcknowledgeMsg();
                            toastr.info($("#MessageText").html());

                        }
                    },

                });
            }

            else {
                ValidationMsg();
                toastr.warning($("#MessageText").html());
            }


        });

        //Initializing Main page details Kendo Grid Colums
        var MainGrid = $('#MainGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: false,
                schema: {
                    model: {
                        id: "TerritoryManagerID",
                        fields: {
                            TerritoryManagerID: { type: "string" },
                            TerritoryManagerName: { type: "string" },
                            MPOCode: { type: "string" },
                            MPOName: { type: "string" },
                            MPGroup: { type: "string" },
                            RestQty: { type: "string" },
                            CentralQty: { type: "string" },
                            TotalQty: { type: "string" },
                            VariableQty: { type: "string" },
                            ExecuteQty: { type: "string" },
                            BalanceQty: { type: "string" }
                        }
                    }
                },
                pageSize: 100,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 10
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
       
           
            selectable: "row",
            
            toolbar: [{ template: "<input type='text' id='txtGridMPOName'  style='float:right' placeholder='MPO Name...' class='k-textbox'>" }, { template: "<input type='text' id='txtGridMPOCode'  style='float:right' placeholder='MPO Code...' class='k-textbox'>" }, ],
            height: 450,
            scrollable: true,
            sortable: true,
            filterable: false,
            editable: false,
            navigatable: false,
            columnMenu: false,
            reorderable: false,
            //resizable: true,
            //resize: function (e) {
            //    this.table.height(this.element.height() + this.table.height() - 1);
            //},

            columns: [
                 { field: "TerritoryManagerID", hidden: true, title: "TerritoryManagerID" },
                 { field: "TerritoryManagerName", title: "TM" },
                 { field: "MPGroup", hidden: true, title: "MPGroup" },
                 { field: "MPOCode", hidden: true, title: "MIO Code" },
                 { field: "MPOName", title: "MIO Name", template: "<a href='javascript:void(0)' style='text-decoration: underline;'   class='a:link btnLink'> ${MPOName} </a>" },
                 { field: "RestQty", title: "CarryIn<br/>Qty" },
                 { field: "CentralQty", title: "Receive<br/>Qty" },
                 { field: "TotalQty", title: "Total<br/>Qty" },
                 { field: "VariableQty", title: "Add/<br/>Defi" },
                 { field: "ExecuteQty", title: "Execute<br/>Qty", template: "<a href='javascript:void(0)' style='text-decoration: underline;'  class='a:link btnLinkExecuteQty'> ${ExecuteQty} </a>" },
                 { field: "BalanceQty", title: "Balance<br/>Qty" }

            ]
        }).data('kendoGrid');





        $("#txtGridMPOCode").keyup(function () {
            var val = $(this).val();
            $("#MainGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                     { field: "MPOCode", operator: "contains", value: val },
                ]
            });
        });
        $("#txtGridMPOName").keyup(function () {
            var val = $(this).val();
            $("#MainGrid").data("kendoGrid").dataSource.filter({
                logic: "or",
                filters: [
                    { field: "MPOName", operator: "contains", value: val },
                ]
            });
        });



        $('#ProductCode').select2();
        $('#ItemType').change(function () {
            var model = {};
            model.ItemType = $("#ItemType").val();
            $.ajax({
                url: '/Default/GetProductItem',
                type: 'POST',
                dataType: 'JSON',
                data: JSON.stringify({ model: model }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $('#ProductCode').empty();
                    $.each(data, function (i, item) {
                        $('#ProductCode').append($('<option>', { value: item.ProductCode, html: item.ProductName }, '<option/>'));
                    });
                },
                error: function () {
                    alert("Failed to load...");
                }
            });
        });







        $(".datepicker").datepicker({
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            autoclose: true
        });
        $("#Year").val(yyyy);

        LoadMonth();


        function LoadMonth() {
            $.ajax({
                url: '/Default/GetGenMonth',
                type: 'GET',
                dataType: 'JSON',
                data: "{}",
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    $.each(data, function (i, item) {
                        $('#MonthNumber').append($('<option>', { value: item.MonthNumber, html: item.MonthName }, '<option/>'));
                    });
                },
                error: function () {
                    alert("Failed to load ... !!");
                }
            });
        }



        $("#MainGrid").on("click", ".btnLink", function (e) {
            var grid = $("#MainGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
            GetData(dataItem);
        });


        function GetData(dataItem) {




            var MPOCode = dataItem.MPOCode;
            var MPOName = dataItem.MPOName;
            var Year = $("#Year").val();
            var MonthName = $("#MonthNumber").val();
            var MonthNumber = $("#MonthNumber").val();



            var model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = dataItem.MPGroup;
            model.ItemType = $("#ItemType").val();

            model.ProductCode = $("#ProductCode").val();





            var Parameter = "MPO: " + MPOCode + "," + MPOName + ", Year-Month : " + Year + " - " + MonthName;
            $("#Parameter").html(Parameter);


            DetailPopupWindow.center();
            DetailPopupWindow.open();
            $.ajax({
                type: "POST",
                url: "/ReportDCRItemExecution/GetItemDetail",
                data: JSON.stringify({ model: model }),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $('#DetailPopupWindowGrid').data('kendoGrid').dataSource.data(data);

                    }
                    else {

                        DetailPopupWindow.close();
                        AcknowledgeMsg();
                        toastr.info($("#MessageText").html());
                    }

                },
                error: function () {
                    alert('Error occured!');
                },

            });
        }

        var DetailPopupWindow = $("#DetailPopupWindow").kendoWindow({
            draggable: true,
            modal: true,
            resizable: true,
            title: "List",
        }).data("kendoWindow");


        //Initializing Main page details Kendo Grid Colums
        var DetailPopupWindowGrid = $('#DetailPopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "MPGroup",
                        fields: {
                            MPGroup: { type: "string", editable: true },
                            ProductCode: { type: "string" },
                            ProductName: { type: "string" },
                            SetDate: { type: "string" },                           
                            RestQty: { type: "string" },
                            CentralQty: { type: "string" },
                            TotalQty: { type: "string" },
                            VariableQty: { type: "string" },
                            ExecuteQty: { type: "string" },
                            BalanceQty: { type: "string" }
                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            scrollable: true,
            sortable: true,
            filterable: false,
            editable: false,
            selectable: "row",
            navigatable: true,

            columnMenu: false,
            reorderable: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [
                 { field: "MPGroup", title: "MPGroup", hidden: true },
                 { field: "ProductCode", title: "Product Code", hidden: true  },
                 { field: "ProductName", title: "Product Name" },
                 { field: "SetDate", title: "Date" },
                 { field: "RestQty", title: "CarryIn<br/>Qty" },
                 { field: "CentralQty", title: "Receive<br/>Qty" },
                 { field: "TotalQty", title: "Total<br/>Qty" },
                 { field: "VariableQty", title: "Add/<br/>Defi" },
                 { field: "ExecuteQty", title: "Execute<br/>Qty"},
                 { field: "BalanceQty", title: "Balance<br/>Qty" }


            ]

        }).data('kendoGrid');








        $("#MainGrid").on("click", ".btnLinkExecuteQty", function (e) {

            var grid = $("#MainGrid").data("kendoGrid");
            var dataItem = grid.dataItem($(e.currentTarget).closest("tr"));
            var MPOCode = dataItem.MPOCode;
            var MPOName = dataItem.MPOName;
            var Year = $("#Year").val();
            var MonthName = $("#MonthNumber").val();
            var MonthNumber = $("#MonthNumber").val();



            var model = {};
            model.Year = $("#Year").val();
            model.MonthNumber = $("#MonthNumber").val();
            model.TerritoryManagerID = $("#TerritoryManagerID").val();
            model.MPGroup = dataItem.MPGroup;
            model.ItemType = $("#ItemType").val();

            model.ProductCode = $("#ProductCode").val();





            var Parameter = "MPO: " + MPOCode + "," + MPOName + ", Year-Month : " + Year + " - " + MonthName;
            $("#Parameter2").html(Parameter);



            ExecutePopupWindow.center();
            ExecutePopupWindow.open();
            $.ajax({
                type: "POST",
                url: "/ReportDCRItemExecution/GetExecuteDetail",
                data: JSON.stringify({ model}),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (data) {
                    if (data.length > 0) {
                        $('#ExecutePopupWindowGrid').data('kendoGrid').dataSource.data(data);

                    }
                    else {

                        ExecutePopupWindow.close();
                        AcknowledgeMsg();
                        toastr.info($("#MessageText").html());
                    }

                },
                error: function () {
                    alert('Error occured!');
                },

            });

        });


        var ExecutePopupWindow = $("#ExecutePopupWindow").kendoWindow({
            draggable: true,
            modal: true,
            resizable: true,
            title: "LOV."
        }).data("kendoWindow");

        //Initializing Main page details Kendo Grid Colums
        var ExecutePopupWindowGrid = $('#ExecutePopupWindowGrid').kendoGrid({
            dataSource: new kendo.data.DataSource({
                batch: true,
                schema: {
                    model: {
                        id: "MPGroup",
                        fields: {
                            MPGroup: { type: "string", editable: true },
                            ProductCode: { type: "string" },
                            ProductName: { type: "string" },
                            SetDate: { type: "string" },
                            RestQty: { type: "string" },
                            CentralQty: { type: "string" },
                            TotalQty: { type: "string" },
                            VariableQty: { type: "string" },
                            ExecuteQty: { type: "string" },
                            BalanceQty: { type: "string" }
                        }
                    }
                },
                pageSize: 10,
            }),
            pageable: {
                //refresh: true,
                pageSizes: true, buttonCount: 5
            },
            dataBound: function (e) {
                AutoFitColumn(this.element[0].id);
            },
            scrollable: true,
            sortable: true,
            filterable: false,
            editable: false,
            selectable: "row",
            navigatable: true,

            columnMenu: false,
            reorderable: false,
            resizable: false,
            resize: function (e) {
                this.table.height(this.element.height() + this.table.height() - 1);
            },
            columns: [
                 { field: "MPGroup", title: "MPGroup", hidden: true },
                  { field: "SetDate", title: "Date" },
                 { field: "DoctorID", title: "Doctor ID" },
                 { field: "DoctorName", title: "Doctor Name" },          
                 { field: "ProductCode", title: "Product Code", hidden: true  },
                 { field: "ProductName", title: "Product Name" },
                { field: "Quantity", title: "Execute<br/>Qty" },
                { field: "DcrType", title: "DCR<br/>Type" },

            ]

        }).data('kendoGrid');









    });





</script>
